[{"content":"\rLink #\rcupid\nFeatures #\rChanges based on other DTs include Gapps Support MiuiCamera and ScreenOffUdfps ChangeLog #\r2024-09-30 first release\rKnown Bugs #\rVPN disconnects when installing or deleting apps Source #\rROM\ncrDroid10.8\nDevice Tree\ncupid\nsm8450-common\nmiuicamera-cupid\n","date":"2024-09-23","externalUrl":null,"permalink":"/posts/2024-09-23-unofficial-cupid-crdroid/","section":"Posts","summary":"Link # cupid Features # Changes based on other DTs include Gapps Support MiuiCamera and ScreenOffUdfps ChangeLog # 2024-09-30 first release Known Bugs # VPN disconnects when installing or deleting","title":"[Unofficial] Xiaomi12 Crdroid","type":"posts"},{"content":"","date":"2024-09-23","externalUrl":null,"permalink":"/tags/android/","section":"Tags","summary":"","title":"Android","type":"tags"},{"content":"","date":"2024-09-23","externalUrl":null,"permalink":"/categories/android/","section":"Categories","summary":"","title":"Android","type":"categories"},{"content":"","date":"2024-09-23","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"2024-09-23","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"2024-09-23","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"2024-09-23","externalUrl":null,"permalink":"/tags/%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0rom/","section":"Tags","summary":"","title":"カスタムROM","type":"tags"},{"content":"","date":"2024-09-23","externalUrl":null,"permalink":"/","section":"なねさんメモ","summary":"","title":"なねさんメモ","type":"page"},{"content":"\rお知らせ #\r最適化具合やリポジトリの更新頻度を理由にProjectBlazeを卒業してcrdroidに移行することにしたので3.7-forkを最終ビルドとします。(3.8がEOLなのにキリが悪い)\nVer.1.3の頃に出会ってから2年間、お世話になりました。\nProjectBlazeって？ #\rUIのカスタマイズやGameSpace、A11 QuickSettingsタイルなどの機能を備えたAOSPベースのカスタムROMの一種。\n(今ではいろんなROMで実装されているA11 QuickSettingsだが当時は更新が活発なROMで実装されているものはこれだけだった)\n今でも開発頻度は落ちたものの月1ペースのアップデートがあるROMだ。\nデバイスリスト #\rデバイス バージョン Pixel 7a 3.7-fork Xiaomi 12 3.7-fork Zenfone 8 3.7-fork 余談 #\r前はSourceForgeで公開していたのだがVPNに対する帯域絞りがひどいので自前のwebサーバーに移転した。 3.7-forkのバージョンについてだが、TrickyStoreでStrongを通すためにframeworksとBlazeHouseに変更を加えたもの。 (3.8でこの変更は必要なくなった) ","date":"2024-08-30","externalUrl":null,"permalink":"/posts/2024-08-30-projectblaze-ownbuild-list/","section":"Posts","summary":"お知らせ # 最適化具合やリポジトリの更新頻度を理由にProje","title":"[Closed]自前ビルドのProjectBlaze List","type":"posts"},{"content":"","date":"2024-08-17","externalUrl":null,"permalink":"/tags/linux/","section":"Tags","summary":"","title":"Linux","type":"tags"},{"content":"","date":"2024-08-17","externalUrl":null,"permalink":"/tags/network/","section":"Tags","summary":"","title":"Network","type":"tags"},{"content":"","date":"2024-08-17","externalUrl":null,"permalink":"/categories/network/","section":"Categories","summary":"","title":"Network","type":"categories"},{"content":"","date":"2024-08-17","externalUrl":null,"permalink":"/series/reubuntu-router/","section":"Series","summary":"","title":"Re:Ubuntu Router","type":"series"},{"content":"","date":"2024-08-17","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"ローカル内で動かしているサービスをcloudflare tunneling経由で公開したい。\nまた、ローカルネットワーク上の機器からurlを踏んだときはcloudflare tunnelingを経由しないでアクセスしたかったりnextcloudのためにsslをなんとかしたり等々。\n誰も興味がないホストしているもの一覧 archivebox Gitea h5ai navidrome nextcloud sdnext(stable diffusion fork) upsnap ローカル内の整備 #\rCertbotを使ってワイルドカード証明書を発行 #\rこれはローカル内でnextcloudを触るときにhttpsでアクセスしたいがオレオレ証明では警告が鬱陶しかったりAPIを叩くときにエラーが出るのでLet\u0026rsquo;s Encryptを頼ることにした。\n(要は所有しているクライアントに自己署名をいれるのがだるかった)\nとりあえずsudo apt install -y certbotでcertbotを入れよう。\n今回はDNSチャレンジで証明書を発行する(たまたま見つけた記事がそのやり方だったので)\ncertbot certonly --manual --preferred-challenges dns メアドや利用規約の同意などを済ませたら発行したいドメインを聞かれるので入力する。 自分の場合は*.j7b3y.com TXTレコードの名前と値が表示されるので、レコードを追加する。\nレコードの追加が終わったら反映を確認してからEnter.\nGoogle Admin Toolbox Digを活用しよう。\nファイルは/etc/letsencrypt/live/j7b3y.com/に保存される。\nローカル環境内では自分のドメインを踏んだときにローカル内で完結させるようにする #\rここではadguardhome+nginxを使う。\nnginxのインストール #\rcurl https://nginx.org/keys/nginx_signing.key | gpg --dearmor \\ | sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg \u0026gt;/dev/null echo \u0026#34;deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \\ http://nginx.org/packages/ubuntu `lsb_release -cs` nginx\u0026#34; \\ | sudo tee /etc/apt/sources.list.d/nginx.list sudo apt update sudo apt install nginx リバースプロキシの設定 #\r各urlを踏んだときにサーバーの指定したポートに飛ばすようにする。\n/etc/nginx/nginx.conf\ruser nginx;\rworker_processes auto;\rerror_log /var/log/nginx/error.log notice;\rpid /var/run/nginx.pid;\revents {\rworker_connections 1024;\r}\rhttp {\rclient_max_body_size 3000m;\rserver {\rlisten 80;\rserver_name a.j7b3y.com;\rreturn 301 https://a.j7b3y.com;\r}\rserver {\rlisten 443 ssl;\rserver_name a.j7b3y.com;\rssl_certificate /etc/letsencrypt/live/j7b3y.com/fullchain.pem;\rssl_certificate_key /etc/letsencrypt/live/j7b3y.com/privkey.pem;\rlocation / {\rproxy_pass http://192.168.1.10:8081/;\rproxy_redirect off;\rproxy_set_header Host $host;\rproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\rproxy_set_header Upgrade $http_upgrade;\r}\r}\r} Port80に来た通信を443にリダイレクトして証明書を反映させるような感じだと自分は解釈している。\nサービスの数だけserver{}のlisten 80;とlisten 443;の内容を増やせば良い。\n最後にnginxを再起動したら次のステップに進む。sudo systemctl restart nginx\nAdguard HomeでDNS書き換えして特定のurlの宛先を変更する #\rAdguard Homeのwebインターフェースにアクセスしたらフィルタ\u0026gt;DNS書き換えにアクセスしてDNS書き換えを追加する。\nドメイン名 アドレス a.j7b3y.com 192.168.1.1 ドメイン名に実際に踏むドメインを入れて、アドレスはnginxが動作しているデバイスのアドレスにする(この場合はルーター)\nCloudflaredでグローバルに公開する #\rCloudflaredのセットアップ #\rwget https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb sudo dpkg -i cloudflared-linux-amd64.deb sudo cloudflared login cloudflared tunnel create private sudo mv /root/.cloudflared/ /etc/cloudflared Cloudflaredで公開するサービスを設定する #\rsudo vim /etc/cloudflared/config.yml\ntunnel: \u0026lt;Tunnel-UUID\u0026gt; credentials-file: /etc/cloudflared/ \u0026lt;Tunnel-UUID\u0026gt;.json ingress: - hostname: a.j7b3y.com service: http://192.168.1.10:8081 - service: http_status:404 公開するサービスを増やすには- service: http_status:404より上にhostnameとserviceを追加すれば良い。\nDNSの設定をする #\rsudo cloudflared tunnel route dns private a.j7b3y.com Cloudflaredを動かす #\rsudo cloudflared service install sudo systemctl enable cloudflared sudo systemctl start cloudflared 参考文献 #\r【Certbot】ワイルドカード証明書を発行するよ\rzenn.dev\rUbuntu22.04 nginx最新の安定版をインストールする #Ubuntu - Qiita\rqiita.com\rCloudflare Tunnelで自宅サーバーを公開する(FreeプランOK)\rzenn.dev\r","date":"2024-08-17","externalUrl":null,"permalink":"/posts/2024-08-17-re-ubuntu-router-4/","section":"Posts","summary":"ローカル内で動かしているサービスをcloudflare tun","title":"ローカル内サービスの公開","type":"posts"},{"content":"記事の書き直しの理由の7割がここ。\nTailscaleの導入 #\rアカウント登録は各自で済ませてください。(丸投げ)\nインストールコマンド\ncurl -fsSL https://tailscale.com/install.sh | sh sudo tailscale up もう一つ適当なデバイスでもログインをしておきましょう(デバイスを2つ揃えないとチュートリアルから進まない。)\nルーターを出口ノードに指定する。(ここはお好みで) #\r1.ルーターで出口ノードとして使用することを宣言(?)\nsudo tailscale set --advertise-exit-node ルーター配下のサブネットをTailscaleに追加する。 sudo tailscale set --advertise-routes=192.168.1.0/24 変更を反映する。 sudo tailscale up Tailscaleのwebインターフェースからルーターを選択してサブネットルーティングと出口ノードを設定。 見ての通りかもしれない。\nTailscaleの認証は6ヶ月スパンなのだが正直常用する機器で忘れた頃に認証を要求されても面倒なので無効化するのも良いと思う。\n(Machines\u0026gt;\u0026hellip;\u0026gt;Disable key expiry)\n自分はルーターのみ無効にしてほかはデフォルトのままにしている。\nまた、各クライアントで出口ノードと手動でルーターに設定しないといけないっぽい。\nNordVPNクライアントの導入 #\r生ipを様々な場所で使用することに耐えられない病気なので ルーターに接続している機器全てがNordVPNを使用するように設定。\nクライアントのインストール #\rsh \u0026lt;(curl -sSf https://downloads.nordcdn.com/apps/linux/install.sh) sudo usermod -aG nordvpn $USER sudo reboot Cli環境でNordVPNにログインする方法は以下の記事が参考になります。\n家のネットワークを丸ごと VPN にする方法 (Raspberry Pi × NordVPN) #Ubuntu - Qiita\rqiita.com\rNordVPNを起動する前にいくつか設定しておく。\nnordvpn set technology NORDLYNX nordvpn set firewall disabled nordvpn set killswitch disabled nordvpn set autoconnect on 上から\nプロトコルにnordlynxを指定 iptablesの書き換えを阻止 キルスイッチの無効化(ufwで設定するため) 自動接続\nとなっている。 VPN用にufwを改変 #\r*filter\r:ufw-before-input - [0:0]\r:ufw-before-output - [0:0]\r:ufw-before-forward - [0:0]\r:ufw-not-local - [0:0]\r# Allow LAN traffic\r-A ufw-before-input -i br0 -j ACCEPT\r-A ufw-before-output -o br0 -j ACCEPT\r-A ufw-before-input -i br0 -d 192.168.1.1 -j ACCEPT\r# Allow established/related connections\r-A ufw-before-input -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT\r-A ufw-before-output -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT\r# NordVPN\r-A ufw-before-forward -i br0 -o nordlynx -j ACCEPT\r-A ufw-before-forward -i nordlynx -o br0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT\r-A ufw-before-output -m mark --mark 0xe1f1 -o enp1s0 -j ACCEPT\r# Allow traffic from tailscale0\r-A ufw-before-forward -i tailscale0 -j ACCEPT\r-A ufw-before-forward -o tailscale0 -j ACCEPT\r-A ufw-before-output -m mark --mark 0x80000 -o enp1s0 -j ACCEPT\rCOMMIT\r*nat\r:POSTROUTING ACCEPT [0:0]\r-A POSTROUTING -o enp1s0 -m mark --mark 0x80000 -j MASQUERADE\r-A POSTROUTING -o tailscale0 -j MASQUERADE\r-A POSTROUTING -o nordlynx -j MASQUERADE\rCOMMIT nordvpn c japanでVPNに接続してみたらつながるはず。\nまた、接続が完了できたら再起動してtailscaleやnordvpnが正常に起動するかも見る。\nTodo #\rTailscale経由のデバイスがNordVPN切断時に生ipを使用する。\nなにか対策を考えている。 ","date":"2024-08-12","externalUrl":null,"permalink":"/posts/2024-08-12-re-ubuntu-router-3/","section":"Posts","summary":"記事の書き直しの理由の7割がここ。 Tailscaleの導入 #","title":"VPNの導入","type":"posts"},{"content":"作業に取り掛かる前にsshのポートを変えたり鍵認証にしたりしよう。\nLANとWANの設定。 #\renp3s0,enp4s0でネットワークブリッジを構成する。 #\rsudo apt install vim ufw\rsudo vim /etc/netplan/00-installer-config.yaml 00-installer-config.yaml network:\rversion: 2\rrenderer: networkd\rethernets:\renp1s0:\rdhcp4: true\rnameservers:\raddresses:\r- 127.0.0.1\renp2s0:\rdhcp4: true\roptional: true\renp3s0:\rdhcp4: false\roptional: true\renp4s0:\rdhcp4: false\roptional: true\rbridges:\rbr0:\rinterfaces: [enp3s0,enp4s0]\raddresses: [192.168.1.1/24]\rnameservers:\raddresses: [192.168.1.1]\roptional: true sudo netplan applyで変更を反映する\n起動時に二分間スタックするのをなんとかする。 #\r/etc/systemd/system/network-online.target.wants/systemd-networkd-wait-online.serviceのExecStart=を/lib/systemd/systemd-networkd-wait-online --anyにする。\nフォワードを有効にする。 #\recho \u0026#39;net.ipv4.ip_forward = 1\u0026#39; | sudo tee -a /etc/sysctl.conf echo \u0026#39;net.ipv6.conf.all.forwarding = 1\u0026#39; | sudo tee -a /etc/sysctl.conf sudo sysctl -p /etc/sysctl.conf Adguard Homeの導入 #\r自分はインストーラーを使用した。\nsystemd-resolvedを無効化する。 #\rsudo mkdir /etc/systemd/resolved.conf.d sudo vim /etc/systemd/resolved.conf.d/adguardhome.conf ・/etc/systemd/resolved.conf.d/adguard.conf\n[Resolve]\rDNS=127.0.0.1\rDNSStubListener=no sudo mv /etc/resolv.conf /etc/resolv.conf.backup sudo ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf sudo systemctl reload-or-restart systemd-resolved Adguardのインストール #\rここでの選択肢はインストールスクリプトを使うかsnapなのだが(docker版はdockerがiptablesを穴だらけにするので不採用)\n自分はインストールスクリプトを使用した。\nwget --no-verbose -O - https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -v ルーターと接続されている機器でhttp://192.168.1.1:3000にアクセスすると初期設定が始まるので\nWeb Interfaceをお好みのポートに、DNSサーバーをAll interfacesのPort53にする。\nユーザー名とパスを設定してセットアップを終えたらhttp://192.168.1.1:****でWebインターフェースに飛べるようになる。\n※このタイミングではIPが割り当てられないので接続する際には手動で割り当てること。\nDHCPサーバーを設定する #\rWebインターフェースを開いたら設定\u0026gt;DHCP設定を開き、DHCPインタフェースの選択をbr0にしてDHCP IPv4の設定をお好みの内容にしよう。\nDHCP静的割り当てなんかもできるのでipを固定したい機器なんかはこのタイミングでやってあげると今後が楽かもしれない。\n設定が終わったらDHCPサーバーをチェックするを押したあとDHCPサーバーを有効にするを押す。(チェック時になにか警告が出るけど平気平気)\nufwの設定 #\rsudo ufw default deny incoming sudo ufw default allow outgoing sudo ufw allow from 192.168.1.0/24 to any port 22 proto tcp sudo ufw allow from 192.168.1.0/24 to any port 53 proto tcp sudo ufw allow from 192.168.1.0/24 to any port 53 proto udp /etc/ufw/before.rules *filter\r:ufw-before-input - [0:0]\r:ufw-before-output - [0:0]\r:ufw-before-forward - [0:0]\r:ufw-not-local - [0:0]\r# Allow LAN traffic\r-A ufw-before-input -i br0 -j ACCEPT\r-A ufw-before-output -o br0 -j ACCEPT\r-A ufw-before-input -i br0 -d 192.168.1.1 -j ACCEPT\r# Allow established/related connections\r-A ufw-before-input -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT\r-A ufw-before-output -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT\r# Allow traffic from LAN to WAN (NAT)\r-A ufw-before-forward -i br0 -o enp1s0 -j ACCEPT\r-A ufw-before-forward -i enp1s0 -o br0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT\r# Allow DNS traffic from router to itself\r-A ufw-before-input -i lo -j ACCEPT\r-A ufw-before-output -o lo -j ACCEPT\rCOMMIT\r*nat\r:POSTROUTING ACCEPT [0:0]\r-A POSTROUTING -o enp1s0 -j MASQUERADE\rCOMMIT sudo ufw enable \u0026amp;\u0026amp; sudo ufw reload を忘れずに。\nufwのログがうるさかったらデバッグ時以外はオフにするのも視野。\n","date":"2024-08-12","externalUrl":null,"permalink":"/posts/2024-08-12-re-ubuntu-router-2/","section":"Posts","summary":"作業に取り掛かる前にsshのポートを変えたり鍵認証にしたりし","title":"ルーター部分のセットアップ","type":"posts"},{"content":"\rなんの記事？ #\rubuntu serverをルーター化するシリーズの書き直しと部分的な変更。\nこのシリーズ内で出てくる言い回し #\rいちいち細かく書くのも面倒だからワードを簡略化するよってことで(正しい意味と食い違ってくるかもしれないのはお許しを)\nルーター Ubuntuルーターのことを指す。\nHGW AU光のルーター(ホームゲートウェイ)のことを指す。家庭内ネットワークの最上流に位置する。\nVPN ここではTailscaleとNordVPNクライアントの両方を指す。\n構成 #\rCPU: Intel N100\nRAM:8GB\nOS:Ubuntu jammy 22.04 x86_64\nShell:zsh 5.8.1\n例のアリエクミニPCです。\nLANポート4つにM-KeyのNvmeスロット付き。\nMiniPCIEスロットもあるけどこれはnvme変換(A-Key)を噛ませてもBluetoothしか使用できないのが欠点。\nUSB BootでOpenwrt動かしてM-KeyをA-Keyに変換してwifiカードを指すなんて荒業も一応できる\n計画 #\renp1s0:WAN(KDDI)\nenp2s0:空(予備ポート)\nenp3s0+4s0:LANポート(4s0に2.5Gハブを接続)\nDHCPサーバーとDNSにAdGuardHomeを採用。\n自宅サーバーでホストしているサービスへアクセスするためにCloudflared,Nginx,Certbotを導入。\nRustdeskサーバーをホスト。\nNordVPNクライアントを稼働させて配下のデバイス全てがNordを踏み台にする構成にする。\nリモートアクセス用のVPNにTailscaleを採用(変更点)\nTailscaleにした理由\rWireGuardをホストしていた際にNordVPNのルーティングルールと干渉して一部環境で接続ができなかったため。\nクライアントが別のルーティング機器を介した際にルーターからクライアントへの通信がNordlynxインターフェースに吸われてハンドシェイクが成立しなかった。(LTEでは接続できていた辺りがよくわからなかった)\nufwの定義も魔境と化していてNordVPNクライアントの仕様もよくわからなかったので手軽そうなTailscaleを試そうかなと思った次第。\nTailscaleのメリットは tailscaleで実現するかんたん・安全・便利なクラウド型VPN接続のカタチ #Security - Qiita\rqiita.com\rTailscale VPN を使ってみたので感想 | つくみ島だより\rblog.tsukumijima.net\rがわかりやすい。\n※余談\nDDNSやロードバランサーなども折り込みたかったが、まずは最低限必要な部分だけ揃えようと思い今回は除外した。\n自宅にはKDDI回線の他にCATV回線もあるのでmwan3みたいなことをVPNと併用できたら夢がありそうだ。\n","date":"2024-08-12","externalUrl":null,"permalink":"/posts/2024-08-12-re-ubuntu-router-1/","section":"Posts","summary":"なんの記事？ # ubuntu serverをルーター化するシリーズの書き直","title":"ルーターの概要","type":"posts"},{"content":"\r注意事項と前置き #\rあくまで自分か使用しているものを書いているだけなので\n使用の判断は各個人におまかせします。不利益なことが起こっても責任は取れません。\n最近pixel7aに移行したときに使っていたものがすぐに思い浮かばなかったので最低限常用するものを書き残していこうと思う。\nシステム権限いじったことによる文鎮化と2度のセットアップ経験で泣きそう。\nデバイス #\rPixel7a\nいいところ\n普段使いに困らない性能 バニラでもよし、カスタムするもよしな幅広い選択肢 そこそこの規模のpixel7コミュニティ Felica搭載 今のところ不満なところは充電速度と中途半端なサイズ感なところくらい(スマホはある程度スリムであるべき派)\nシステム(ROM,Kernel,Root) #\rProject Blaze 14-QPR2 #\rROMの候補としてはCrdroidやProjectMatrixxなどがあったが、\nZenfone8の頃に使用していて慣れているProjectBlazeがいいと思ったので自分でビルドした。\n現時点の互換性の問題などからQPR1のほうが好ましかったがデバイスツリー、ソース双方の変更点が多すぎたため妥協。\n現在はGamespaceやロック画面のアルバムアートなどが使えなくなっている。\nROM本体はSourceForgeで配布している(VPN帯域制限が重いのでそのうち別の場所に移行するつもり)\nj7b3y Artifact - Browse /lynx/projectblaze/3.2 at SourceForge.net\rsourceforge.net\rblu_spark r46 #\rROM同梱のカーネルでも良かったがどうせならということでカスタムカーネル導入に至った。\nSultan,Despairはxda上では動きが見られなかったのでblu_sparkにした。\n特に不具合などもないのでこのままblu_sparkを使おうと思う。\nDevelopment - [KERNEL] [blu_spark r46] [A14 Apr 2024] | XDA Forums\rxdaforums.com\rAPatch #\rググるとapache関連の記事が出でくるルートソリューション。\nAndroidPatchとググるとちゃんとヒットする。\nざっくりいうとKSUとMagiskのいいとこ取りみたいなもの。\nGitHub - bmax121/APatch: The patching of Android kernel and Android system\rgithub.com\rインストールにはこちらが便利(Yervant7氏の遺産)\nGitHub - vasilispngs/kpatch-flashable-zip: The best solution to automatically patching boot.img …\rgithub.com\rモジュール #\rMagiskモジュール #\rKoruri Font\nGitHub - AndroPlus-org/magisk-module-koruri-font: font-koruri-n\rgithub.com\rPlay Integrity Fix\nPlay IntegrityとSafetyNetをパスするモジュール。\nGitHub - chiteroman/PlayIntegrityFix: Fix Play Integrity (and SafetyNet) verdicts.\rgithub.com\rQuickSwitch\nサードパーティ製ランチャーのQuickStepを使うためのスクリプト。\nPixelLauncherはサードパーティ製ランチャーと組み合わせると挙動がおかしくなるので使用。\n(使用しているランチャーは後述)\nApatch環境及び14-QPR2では動作がおかしかったので他のユーザーのプルリクエストを取り入れつつforkしたものを使っている。\nGitHub - j7b3y/QuickSwitch at anyfix\rgithub.com\rTwemoji Remastered\nGitHub - Gontier-Julien/Twemoji-Remastered: Twemoji-Remastered Magisk module 🐦\rgithub.com\rZygisk - LSPosed_mod\nApatch対応、webuiを利用したショートカット内蔵など上流よりパワーアップしている。 GitHub - mywalkb/LSPosed_mod: My changes to LSPosed\rgithub.com\rZygisk Assistant\nRootとZygiskを隠すためのモジュール。\n設定をしっかり見直さないと動作しないアプリが出てきたりするので注意深く使用すべし。\nGitHub - snake-4/Zygisk-Assistant: A Zygisk module to hide root for KernelSU, Magisk and APatch, …\rgithub.com\rZygisk Next\nKSUとAPでZygiskを使用できるようにするモジュール。\nGitHub - Dr-TSNG/ZygiskNext: Standalone implementation of Zygisk\rgithub.com\rXposedモジュール #\rLSPosedとXposedってなんて発音するの？\nApp Settings Reborn\nアプリ毎に細かな設定ができる。自分は主に無音化を使用。\nGitHub - BlueCat300/XposedAppSettings: Fork of the original App Settings by Rovo89. Supporting …\rgithub.com\rCore Patch\nパッケージインストーラーを使うときにダウングレードを許可したり署名の比較を無効化したりする。\nGitHub - LSPosed/CorePatch: Disable signature verification For Android\rgithub.com\rLIME\nLineの広告除去、送信取り消し既読無効化などの便利機能。\nGitHub - Chipppppppppp/LIME: Adkiller for LINE\rgithub.com\rPrivacySpace\nアプリを隠すモジュール。Xposedモジュールの検知回避に使おう。\nGitHub - GeekTR/PrivacySpace: 隐秘空间/PrivacySpace\rgithub.com\rPyoncordXposed\nDiscordをカスタマイズできるモジュール。Vendettaの後継。\nGitHub - pyoncord/BunnyXposed: An Xposed module dedicated to injecting Bunny\rgithub.com\rUpdateLocker\n特定のアプリの更新が各種ストアからされないようにするモジュール。 GitHub - Xposed-Modules-Repo/ru.mike.updatelocker: Update Locker: stop update your apps\rgithub.com\rアプリ #\rファイルマネージャー+\nかなり便利なファイルマネージャー。rootエクスプローラー付き。\n\u0026lt;title id=\u0026#34;main-title\u0026#34;\u0026gt;File Manager - Apps on Google Play\rplay.google.com\rAdguard\n広告ブロックしてくれるモジュール。Proに入っているともっと便利。\n本格的にAndroidで広告をブロックするのは【 AdGuard 】 adguard.com\rAFWall+\nroot権限でiptablesを操作するファイアーウォールアプリ。\nAndroid内蔵キルスイッチを使えないとか、絶対に通信させたくないアプリがあるとかに便利。\nAdguardのファイアーウォールと競合する。\nGitHub - ukanth/afwall: AFWall+ (Android Firewall +) - iptables based firewall for Android\rgithub.com\rLawnchair(Unofficial Build)\nAndroid 14-QPR2のrecentに対応した非公式ビルド。\nTelegram: Contact @AMRGAMAL_STORE\rt.me\rNullgram\nAndroid Telegramの便利なクライアント。\nGitHub - qwq233/Nullgram: 3rd party client of Telegram\rgithub.com\rPiko\nTwitterの改造クライアント。TwiFucker難民の移行先。\nGitHub - crimera/piko-builds\rgithub.com\rRex\nYT及びYTMの改造クライアント。\nTelegram: Contact @rvx_lite\rt.me\rSocial Doge\nTwitterのFF管理アプリ。\nGitHub - fa0311/social_doge: Twitter follow/follower manager\rgithub.com\rさいごに #\rいかがでしたか？\n","date":"2024-05-01","externalUrl":null,"permalink":"/posts/2024-05-01-use-on-my-android/","section":"Posts","summary":"注意事項と前置き # あくまで自分か使用しているものを書いている","title":"自分のAndroid環境について語る","type":"posts"},{"content":"","date":"2024-03-29","externalUrl":null,"permalink":"/tags/kvm/","section":"Tags","summary":"","title":"Kvm","type":"tags"},{"content":"","date":"2024-03-29","externalUrl":null,"permalink":"/categories/kvm/","section":"Categories","summary":"","title":"Kvm","type":"categories"},{"content":"※2024/04/05 稀にVMが少しの間フリーズする。に2つの修正を追加。\n前置き #\r普段はWindows、でもたまにUbuntu使っていたので\nホストはWindowsでHyperVを使ってゲストにUbuntuを入れていた。\nある日Androidのビルドをしているときにゲストに割り当てているM.2 SSDがSata3並の速度で稼働していることに気がついた。\nもともとゲストにiGPUを割り当てれずGUIの使用に不便を感じていたところにこれだったので別の方法を考えていたところ、\nホストをUbuntuにしてiGPUを扱い、ゲストにIntel ARCを割り当てる案が浮かんだので取り組むことにした。\n構成 #\rCPU: Core i5 12600k\nRAM: 96GB\nGPU: Intel UHD Graphics 770 \u0026amp; Intel ARC A770 16GB\nOS: Kubuntu 22.04LTS\nKernel: 6.8.0-zen1-noir-rt7\nResizeBarはONです。\nIOMMUを有効にする。 #\rBiosでVT-dとIOMMUに関する項目を有効にする。\n次にカーネルコマンドラインのGRUB_CMDLINE_LINUX_DEFAULTに以下を追記してIOMMUを有効にする。\nsudo vim /etc/default/grub GRUB_CMDLINE_LINUX_DEFAULT=\u0026#34;quiet intel_iommu=on iommu=pt\u0026#34; 変更を反映する\nsudo update-grub ホストがパススルー対象を使用しないようにする #\r/etc/modulesに以下の内容を追記。\nvfio\rvfio_iommu_type1\rvfio_pci\rvfio_vurqfd /etc/modprobe.d/vfio.confを作成して以下の内容を書き込みホストがGPUを使用しないようにする。\nsoftdep snd_hda_intel pre: vfio-pci\rsoftdep i915 pre: vfio-pci\roptions vfio-pci ids=8086:56a0,8086:4f90 8086:56a0はVGAで8086:4f90はオーディオデバイス。\n変更を反映する。\nsudo update-initramfs -u -k all 再起動するとIntel ARCでホストの出力ができなくなるので別途操作する手段を用意しておこう。\n自分はIntel UHD Graphics 770の出力とRustdeskとsshを用意した。あると便利。\nVMを作る。 #\r必要なソフトウェアのインストール\nsudo apt install qemu-kvm libvirt-daemon-system bridge-utils virt-manager aptで取得されるqemuのバージョンが古かったので自分はqemuをビルドした。\nビルド手順\r別にしなくてもいいので折りたたみ。\nwget https://download.qemu.org/qemu-8.2.2.tar.xz tar xvJf qemu-8.2.2.tar.xz cd qemu-8.2.2 ./configure --target-list=x86_64-softmmu --enable-spice --enable-kvm make -j12 sudo make install ビルドしたものは/usr/localにインストールされる。\nvirt-managerの設定からxml編集を有効化する。\nvirt-managerで適当にWindowsのマシンを作る。\nステップ5の画面でインストール前に設定をカスタマイズするにチェックを入れてから完了を押すと\nインスタンスの細かい設定を開けるのでPCIデバイスを割り当てる。\n今回は\nUSB controller (00:14.0) VGA (03:00.0) Audio (04:00.0) nvme ssd (06:00.0) nvme ssd (0a:00.0)\nを割り当てた。\n割り当てたいデバイスのアドレスはlspciで確認すべし。 トラブルを避けるおまじない #\rこのまま起動したいところだが自分の環境の場合2つのトラブルが発生した。\nシャットダウン時にvfio-pci 0000:03:00.0: not ready ****ms after FLR; waitingが何回か出たあとホストごとフリーズする。 ResizeBar周りがなんかおかしい。(こっちはわりとどうでもいい) vfio-pci 0000:03:00.0: not ready ****ms after FLR; waiting #\rこれはIntel ARCのReset Methotに機能しないものが定義されていることによるエラーらしい。\n/sys/bus/pci/devices/{0000:03:00.0,0000:04:00.0}/reset_methodをクリアすると発生しないようだ。\n[SOLVED] - Issues with Intel ARC A770M GPU Passthrough on NUC12SNKi72 (vfio-pci not ready after FLR …\rforum.proxmox.com\r自分はreset_methotをクリアするスクリプトを用意してホスト起動時にsystemdで起動するようにした。\n/root/arc-reset_methot.sh #!/bin/bash echo \u0026gt; /sys/bus/pci/devices/0000\\:03\\:00.0/reset_method echo \u0026gt; /sys/bus/pci/devices/0000\\:04\\:00.0/reset_method /etc/systemd/system/arc-reset_methot.service [Unit] Intel ARC reset_methot clear. [Service] ExecStart= /root/arc-reset_methot.sh Type=simple Restart=no User=root [Install] WantedBy=multi-user.target sudo systemctl enable arc-reset_methot.service これで起動時やシャットダウン時にエラーが起こらなくなる。\nResizebarに関する修正。 #\r/etc/libvirt/qemu/vm.xmlを以下の内容に修正する。\n- \u0026lt;domain type=\u0026#39;kvm\u0026#39;\u0026gt; + \u0026lt;domain type=\u0026#39;kvm\u0026#39; xmlns:qemu=\u0026#39;http://libvirt.org/schemas/domain/qemu/1.0\u0026#39;\u0026gt; \u0026lt;/devices\u0026gt; + \u0026lt;qemu:commandline\u0026gt; + \u0026lt;qemu:arg value=\u0026#34;-fw_cfg\u0026#34;/\u0026gt; + \u0026lt;qemu:arg value=\u0026#34;opt/ovmf/X-PciMmio64Mb,string=65536\u0026#34;/\u0026gt; + \u0026lt;/qemu:commandline\u0026gt; \u0026lt;/domain\u0026gt; 他の問題 #\r現在ゲストでWindows11を動かしていて気になった問題。\nGPU-ZでBus InterfaceがPCIe x1 1.1 @x1 1.1になっている。 #\rGPU-Z\r原因を探っていると、qemuやパススルー以前の問題で\nホストがLink Speed 2.5GT/s,Width x1として認識しているようで、\npcie_set_speed.shを使っても操作できなかった。\nsudo ./pcie_set_speed.sh 03:00.0 1 Link capabilities: 08400811 Max link speed: 1 Link status: 1011 Current link speed: 1 Configuring 0000:02:01.0... Original link control 2: 00000001 Original link target speed: 1 New target link speed: 1 New link control 2: 00000001 Triggering link retraining... Link status: 1011 Current link speed: 1 Intelのコミュニティでも報告されているが解決しなかったようだ\nIntel ARC A770 on Ubuntu 22.04 LTS showing up as PCIe Gen1 x1 - Intel Community community.intel.com\rサポートページではこう説明されている。\nhttps://www.intel.co.jp/content/www/jp/ja/support/articles/000094587/graphics.htmlにアクセスできませんでした\rwww.intel.co.jp\r稀にVMが少しの間フリーズする。 #\rdmesgを見てもログがなかったので途方に暮れていた。\n色々調べているとArchWikiに自分のシチュエーションに合致しそうな内容が書いてあったので試してみる。\n仮想マシン内のアプリケーションで長い遅延が発生したり開始に長い時間がかかる\n効果があるかはわからないがRNGデバイスを追加してみた。\nビデオカードの HDMI 出力からの音声がおかしい\n音声が遅れるというのはなかったが音割れが多かったので試そうと思った。\n(フリーズと思っているものがHDMI出力の極端な遅延により画面と音声が止まっているふうに感じられるという拡大解釈。)\nMSI utility v3を使って各デバイスがMSIで動いているか確認して、\nLine-Based Interruptsになっているものがあったら☑を入れてMSIに切り替える。\n自分の場合はHigh Definition Audio コントローラがLineBasedになっていた。(Supported modesにLineBasedなかったのにね)\n2024/3/30にこの2つの変更を行ってから2024/04/05(現在)までの使用している時間にはフリーズは観測されなかった。\n(ホスト、VM共に常時起動状態なのでもしかしたら使用していないときに起こっている可能性は無きにしも有らず)\nHigh Definition Audio コントローラがLineBasedに対応していないのに割り込み方法がLineBasedになっていたのが原因ではないかと推測している。\n試したけど解決しなかった修正\r/var/log/libvirt/qemu/*.logにログが吐き出されているのを今日始めて知った。 ログを確認してみるとusbコントローラーのリセットに失敗しているようで qemu-system-x86_64: vfio: Cannot reset device 0000:00:14.0, no available reset mechanism.\rqemu-system-x86_64: vfio: Cannot reset device 0000:00:14.0, no available reset mechanism.\rqemu-system-x86_64: vfio: Cannot reset device 0000:00:14.0, no available reset mechanism.\rqemu-system-x86_64: vfio: Cannot reset device 0000:00:14.0, no available reset mechanism.\rとなっていた。 USBコントローラーを事前にVM用に予約すればいいらしいので以下の内容をvfio.confに追記して様子を見ようと思う。 softdep xhci_pci pre: vfio-pci\roptions vfio-pci ids=8086:7ae0\r[solved] USB controller pass through issue: no available reset mechanism - VM Engine (KVM) - Unraid\rforums.unraid.net\r(おそらくだがホスト側がUSBデバイスを認識できなくなるため別途操作手段を用意しておくこと。) GPUから映像を出力したときに若干文字や色が汚い。 #\r多分目が悪い\n","date":"2024-03-29","externalUrl":null,"permalink":"/posts/2024-03-29-passthrough-intel-arc-with-kvm/","section":"Posts","summary":"※2024/04/05 稀にVMが少しの間フリーズする。に2つ","title":"kvmでIntel ARCをパススルーする。","type":"posts"},{"content":"","date":"2024-02-03","externalUrl":null,"permalink":"/series/ubuntu-router/","section":"Series","summary":"","title":"Ubuntu Router","type":"series"},{"content":"\r前置き #\rubuntu serverをルーター化するの続き。\n今日は日本酒盛ってません。\n前回からの変更点\nVPNクライアントをExpressVPNからNordVPNに。\nWireguardサーバーを構築してLAN(192.168.1.0/24)にアクセス可能にした。\n(ついでにRustdesk Serverも入れた)\nPalworldのゲームサーバーをホスティングしているのでそれ関連の変更。\nTODO\nDDNS\n変更点の詳細 #\rNordVPN関連 #\rログインのやり方は\r家のネットワークを丸ごと VPN にする方法 (Raspberry Pi × NordVPN)が非常に参考になる。\nnordvpn set firewall disable # これがないと後で設定するwireguardが遮断される。\rnordvpn c 前回追記した/etc/ufw/before.rulesの部分を色々変えてこうなった\n-# Allow traffic from LAN to WAN (NAT) --A ufw-before-forward -i br0 -o enp1s0 -j ACCEPT --A ufw-before-forward -i enp1s0 -o br0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT +# Allow traffic from LAN to Nordlynx (NAT) +-A ufw-before-forward -i br0 -o nordlynx -j ACCEPT +-A ufw-before-forward -i nordlynx -o br0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT COMMIT *nat :POSTROUTING ACCEPT [0:0] --A POSTROUTING -o enp1s0 -j MASQUERADE +-A POSTROUTING -o nordlynx -j MASQUERADE COMMIT Wireguard Server #\rsudo ufw allow 51821/udp /etc/wireguard/home.confにコンフィグを書き込む。\n[Interface]\rPrivateKey = *******************************************\rAddress = 10.0.21.1/32\rListenPort = 51821\rDNS=127.0.0.1\rPostUp = iptables -A ufw-before-forward -i %i -o nordlynx -j ACCEPT;iptables -A ufw-before-forward -i nordlynx -o %i -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT;iptables -A INPUT -i home -d 192.168.1.0/24 -j ACCEPT\rPostDown = iptables -D ufw-before-forward -i %i -o nordlynx -j ACCEPT;iptables -D ufw-before-forward -i nordlynx -o %i -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT;iptables -D INPUT -i home -d 192.168.1.0/24 -j ACCEPT\r[Peer]\rPublicKey = *******************************************\rAllowedIPs = 10.0.21.2/32 nordlynxの部分は外向きの通信に使いたいインターフェースにすべし。\nexpressvpnならtun0とか。\nVPN使わないならwanインターフェースの名前にするとか。\nsudo wg-quick up homeでサーバーが立ち上がる。\nsudo systemctl enable wg-quick@homeで自動で立ち上がるようにしとこう。\nゲームのサーバーの公開(生ip) #\r最近身内でパルワールドをやっているのだがlan外のクライアントに対するレスポンスにnordlynxが使用されてしまって通信が成立しなくて困ってた。\nクライアント→ルーター→サーバー→NordVPN→クライアント\nという流れができてしまった。\nnordvpnのクライアントが接続を開始する際にデフォルトルートがnordlynxになるので全ての外向き通信が吸われてしまっていた。(そりゃそうだ)\nnordvpnのcliクライアントにスプリットトンネリングなんてものはないのでルーティングテーブルをいじって解決した。\nテーブルを追加 # /etc/iproute2/rt_tables +810 gameserver netplanでルーティングテーブルをいじる(永続的変更にするため) # /etc/netplan/00-installer-config.yaml network: version: 2 renderer: networkd ethernets: enp1s0: dhcp4: true nameservers: addresses: - 127.0.0.1 + routes: + - to: 0.0.0.0/0 + via: 192.168.0.1 + table: 810 bridges: br0: interfaces: [enp3s0,enp4s0] addresses: [192.168.1.1/24] nameservers: addresses: [192.168.1.1] optional: true + routing-policy: + - from: 192.168.1.10 + table: 810 + mark: 810 + priority: 810 # NordVPNのルーティングルールの優先度は32765なのでこれより小さい数字に ufw(iptables)でポート転送とPalworldサーバープロセスからの通信をマーキングする # /etc/ufw/before.rules *filter +# br0の192.168.1.10:8211/udpとenp1s0の通信を許可する +-A ufw-before-forward -i br0 -o enp1s0 -s 192.168.1.10 -p udp --sport 8211 -j ACCEPT +-A ufw-before-forward -i enp1s0 -o br0 -d 192.168.1.10 -p udp --dport 8211 -j ACCEPT +*mangle +# Palworldのサーバーのパケットにマーキングする +-A PREROUTING -i br0 -s 192.168.1.10 -p udp --sport 8211 -j MARK --set-mark 0x32a COMMIT *nat +# enp1s0から降ってきたポート8211に対する通信をPalworldサーバーに転送する +# mark 0x32aがついたパケットをenp1s0でマスカレードする。 +-A PREROUTING -i enp1s0 -p udp --dport 8211 -j DNAT --to-destination 192.168.1.10:8211 +-A POSTROUTING -o enp1s0 -m mark --mark 0x32a -j MASQUERADE Palworldサーバーが使用するポートがわかっていたのでルーティング前の通信の送信元を参照してマーキング、\nnetplanで192.168.1.10から発信されたmark 810がついている通信を識別してenp1s0がデフォルトルートのテーブルを強制。\nnordlynxを通らずに新鮮なパケットをお届け。\n他のホスティングにも流用できるかも。\nあとがき #\rChatGPTくんが意味わからないことしか書き散らさなかったので自分で調べて解釈して考えて手順を踏んだ(それがあるべき姿なんだけども)\npalworldの鯖公開の際にルーティングテーブルの存在を失念していて三日くらい無駄にした。\nOpenwrtを触ってた時の記憶があったのもあってなんとかなった部分もあったりしてOpenwrtは手軽に色々できてすごいなと思った。\n参考文献 #\r家のネットワークを丸ごと VPN にする方法 (Raspberry Pi × NordVPN) 【Ubuntu18.04のネットワーク設定方法】Netplanの解説 OpenWrt で WireGuard (Point to Site) を試す！ ","date":"2024-02-03","externalUrl":null,"permalink":"/posts/2024-02-03-ubuntu-router-2/","section":"Posts","summary":"前置き # ubuntu serverをルーター化するの続き。 今日は日本酒盛","title":"ubuntu serverをルーター化する2","type":"posts"},{"content":"\r前置き #\r1.Openwrt用のExpressVPNクライアントがない！\n2.11kでなんちゃってAircoveを爆誕させる\n3.性能限界で速度がそんなに出ない\n4.ubuntuをルーター運用してLinuxクライアントを入れればいいのでは\u0026hellip;？\nでもネットワークなんもわからない！助けてChatGPT！うわすごい助けてくれた！俺もういらない！！！\nメンヘラバイト戦士が眠剤と日本酒を盛ったノリで思い出しながら書きなぐり😭😭😭😭\n構成 #\rCPU:Intel N100\nRAM:8GB OS:Ubuntu22.04LTS\n例の中華ミニPCです。\nLANポートが4つあるのでちょうどよいと思いました。\n目標 #\renp1s0:WAN(KDDI回線) enp2s0:WANB(CATV)\nenp3s0~4s0:LANポート\nDHCPサーバーにAdguard Homeを採用。\n最終的に何かしらのVPNクライアントを動かす。 Wireguardサーバーを構築してリモートアクセスしたい。\nCFのDDNSをなんやかんや。\nLANとWANの設定。 #\renp3s0,enp4s0でネットワークブリッジを構成する。 #\rsudo apt install vim ufw\rsudo vim /etc/netplan/00-installer-config.yaml 00-installer-config.yaml network:\rversion: 2\rrenderer: networkd\rethernets:\renp1s0:\rdhcp4: true\rnameservers:\raddresses:\r- 192.168.1.1\renp2s0:\rdhcp4: true\roptional: true\renp3s0:\rdhcp4: false\roptional: true\renp4s0:\rdhcp4: false\roptional: true\rbridges:\rbr0:\rinterfaces: [enp3s0,enp4s0]\raddresses: [192.168.1.1/24]\rnameservers:\raddresses: [192.168.1.1]\roptional: true sudo netplan applyで変更を反映する\n起動時に二分間スタックするのをなんとかする。 #\r/etc/systemd/system/network-online.target.wants/systemd-networkd-wait-online.serviceのExecStart=を/lib/systemd/systemd-networkd-wait-online --anyにする。\nフォワードを有効にする。 #\rsudo vim /etc/sysctl.confでnet.ipv4.ip_forward=1のコメントアウトを外す。\nAdguard Homeの導入 #\rここはインストーラーでもsnapでもって感じ。\nbr0を待ち受けインターフェースに設定した(もしかしたら失敗だったかもしれない)\nufwの設定 #\rsudo ufw default deny incoming\rsudo ufw default allow outgoing\rsudo ufw allow from 192.168.1.0/24 to any port 22 proto tcp\rsudo ufw allow from 192.168.1.0/24 to any port 53 proto tcp\rsudo ufw allow from 192.168.1.0/24 to any port 53 proto udp /etc/ufw/before.rules *filter\r:ufw-before-input - [0:0]\r:ufw-before-output - [0:0]\r:ufw-before-forward - [0:0]\r:ufw-not-local - [0:0]\r# Allow LAN traffic\r-A ufw-before-input -i br0 -j ACCEPT\r-A ufw-before-output -o br0 -j ACCEPT\r-A ufw-before-input -i br0 -d 192.168.1.1 -j ACCEPT\r# Allow established/related connections\r-A ufw-before-input -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT\r-A ufw-before-output -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT\r# Allow traffic from LAN to WAN (NAT)\r-A ufw-before-forward -i br0 -o enp1s0 -j ACCEPT\r-A ufw-before-forward -i enp1s0 -o br0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT\r# Allow DNS traffic from router to itself\r-A ufw-before-input -i lo -j ACCEPT\r-A ufw-before-output -o lo -j ACCEPT\rCOMMIT\r*nat\r:POSTROUTING ACCEPT [0:0]\r-A POSTROUTING -o enp1s0 -j MASQUERADE\r# -A POSTROUTING -o tun0 -j MASQUERADE\rCOMMIT もしVPNクライアントを使うなら# Allow traffic from LAN to WAN (NAT)のenp1s0をtun0なりなんなりに変えてあげて\n最後のコメントアウトを外せばオーケー\nsudo ufw enableとsudo ufw reloadして一回ちゃんと動いてるか確認した。\nExpressVPNのLinuxクライアントを入れて試してみた。 #\rspeedtest結果はDL:414.92Mbps UP:120.94Mbpsだった。\nKDDI回線の速度が大体DL:500M UP:120Mくらいなのでまぁまぁって感じだった。\nWindowsのExpressVPNではリクエスト毎にipがコロコロ変わってた気がしたが\nなんちゃってルーターだと本体でcurlを叩いたときは変わったがサブネット配下のPCでリロードガチャガチャしても変わらなかった。\n感想 #\rネットワークを軽く触れるきっかけになった。 linuxのVPNクライアントはうんちが多い。\nNordVPNとかでもやってみたい。\n今まで通りProtonVPNを使うならOpenwrt+wg.confで良いと思う。\nWG鯖、ddnsはまたそのうちやる。\n","date":"2024-01-30","externalUrl":null,"permalink":"/posts/2024-01-30-ubuntu-router-1/","section":"Posts","summary":"前置き # 1.Openwrt用のExpressVPNクライアン","title":"ubuntu serverをルーター化する","type":"posts"},{"content":"\r前置き #\rあんまり詳しくないので細かいことはかけないのですが\nKernelSUとは別のカーネルベースなルートソリューション\nMagiskとKernelSUの長所を併せ持つ\nMagiskのように簡単にインストールできる\nKernelSUのような強力なカーネルパッチ機能を持つ\nモジュール機能\nのような特徴があります。(何か間違ってたら教えていただけると嬉しいです)\nなんでAPatchに移行したの？ #\r元々自分はKernelSUを使用していたのですが\nここ最近の騒動が原因でパブリックアーカイブ行きになったので\nちょっと前に知って気になってたAPatch使うか～くらいのノリで移行しました。\nQ. Magiskでいいんじゃないの？\nA. それは自分も思った。\n詳しい方々のお話を聞いた際に、 色々な検出関連の事情的に〇〇がいいみたいな感じのことを目にしているのですが\n自分は現状そこまで困っていることもないのでモジュールの互換性だとか動作の事を考えたら\nMagiskで良いのかなーとも思います。\n(素人の意見なので誰か詳しい人がいたら色々な事情とか聞いてみたい。)\n導入 #\r導入したい端末をBLUしとく ストックROMからboot.imgを用意する\n準備はこれだけ！簡単！ Apatchのリリースからマネージャーのapkをダウンロードする。\nインストールしたらPatchをタップして任意の文字列を入力してSuperKeyを設定する。\n(記号などを混ぜるとパッチ時にエラーが出るので注意)\n入力したらboot.imgを選ぶとパッチが当てられる。\nパッチが完了するとDownloadディレクトリにパッチが適応されたboot.imgが出力されるので\nTWRPなりfastbootなりでbootパーティションに書き込んで再起動する。\n無事起動したらApatchマネージャーを開いてSuperKeyをタップして先程設定したSuperKeyを入力する。\n正しければKernelPatchの項目がWorkingになり、AndroidPatchの項目にInstallボタンが出てくるのでそれをタップすれば完了！\nFinally Replace Magisk/KernelSU: APatch is here | Root Any Android in 2024 🤯\nboot.imgを書き込んだあとの手順が分からなかったのでこの動画を見てああ＾～となりました。 動作確認 #\rKernelSUと同じようにroot権限を付与したいアプリを選択して動かす感じです。\n自分の普段使っているものの動作の可否を書いておこうと思います。\n環境 #\rZenfone8 Android13 動作確認できたアプリ #\rAdGuard AFWall+\n起動時のキルスイッチは動作しない(KernelSUも同じ) 動作したモジュール #\rPlay Integrity Fix Shamiko\n最新のものは有効にできないので古いものを使う。\n(Telegramでv0.7.4を使うように言われていた)\n素人意見だがKernelSUのときも思ってたけどこれ要るのかなぁとも思う。 Twemoji-Remastered\nZygisk Nextのv4-0.9.0-258を使用していると絵文字が反映されないので\nv4-0.9.0-249を使う。\n(v4-0.9.0-249に切り替えてからAdguardの安定感も増した) Zygisk InternetBrowserRedirect(AndroPlus氏のfork) Zygisk LSPosed Zygisk Next(Yervant7氏のfork) magisk-module-koruri-font Miui14(Xiaomi.eu)でテストしたところkoruri fontがInCallUIをクラッシュさせたり\nroot権限を付与した際にroot権限が認識されなくてスタックしたりしたが、\nZenUIでテストしたところこれらの問題は起きなかったのでMiuiが悪い。\n追記:RedmiPadのGlobalなMiuiで試しても特に問題は起きませんでした。\nまた、Xiaomi12のグロROMでも検証してみたところ、\n一部のアプリがroot権限を付与した際に動作不良を起こすなどxiaomi.euで起きたものと同様の問題が発生したので\nXiaomi12固有の問題の可能性が高そうです。\n自分にはどうにもならなかったのでXiaomi12はKernelSUに戻しました。\n更に追記:\rこのコミットで修正されたっぽいです。今は安定して動作しています。\nあとがき #\r個人的にわりと気に入ったので応援していきたいと思った。\n","date":"2024-01-12","externalUrl":null,"permalink":"/posts/2024-01-12-android-root-apatch/","section":"Posts","summary":"前置き # あんまり詳しくないので細かいことはかけないのですが K","title":"新しいルートソリューション、APatchのススメ","type":"posts"},{"content":"\r構成 #\rHost:Windows 11\nVM:Ubuntu22.04LTS\nGPU:Intel ARC A770 16GB\nkernelは6.5.0-14-generic\n前置き #\rWSL2で使用されているGPU-PVという技術をHyperVの仮想マシンで使ってVMでもGPUを使おうというお話らしいです。\nダラダラ書き綴っておいてなんですがXeKMDで遊んでた頃はできたのが現在思い出しながらやってみたもののうまく行かず、\nそこまでやる必要もなかったので今後の参考になるようにやったことだけ書き残した形になります。\nできたので色々書き直しました。\n参考文献 #\r・\rHyper-VでGPU(GPU-PV)を利用する方法 (Ubuntu編)\n・\rUbuntu 21.04 VM with GPU acceleration under Hyper-V\u0026hellip;?\n・\rWindows 11 の Hyper-V マシンに GPU を割り当てる(GPU-PV)\n・\rwsl2如何更新linux内核？ - 雾魂泉守-曌鵷鶵的回答 - 知乎\nGPUアダプタを追加する #\rまずはGPUのパスを確認する。\nGet-VMHostPartitionableGpu | Format-Table Name 以下のような感じでデバイスのパスが返ってくる。(複数GPUがあると複数返ってくるらしい)\nName\r----\r\\\\?\\PCI#VEN_8086\u0026amp;DEV_56A0\u0026amp;SUBSYS_10208086\u0026amp;REV_08#6\u0026amp;17410126\u0026amp;0\u0026amp;00080008#{064092b3-625e-43bf-9eb5-dc845897dd59}\\GPUPARAV 帰ってきた値を元にコマンドを実行してアダプタを追加する。\nAdd-VMGpuPartitionAdapter -VMName \u0026#34;VM Name\u0026#34; -InstancePath \u0026#34;Device Path\u0026#34; この場合だと\nAdd-VMGpuPartitionAdapter -VMName \u0026quot;server\u0026quot; -InstancePath \u0026quot;\\\\?\\PCI#VEN_8086\u0026amp;DEV_56A0\u0026amp;SUBSYS_10208086\u0026amp;REV_08#6\u0026amp;17410126\u0026amp;0\u0026amp;00080008#{064092b3-625e-43bf-9eb5-dc845897dd59}\\GPUPARAV\u0026quot;\nとなる。\nGPUリソースを割り当てたりメモリの設定をしたりでホストでの作業はおしまい。\nSet-VMGpuPartitionAdapter -VMName \u0026#34;VM Name\u0026#34; -Passthru\rSet-VM -VMName \u0026#34;VM Name\u0026#34; -GuestControlledCacheTypes $true -LowMemoryMappedIoSpace 1GB -HighMemoryMappedIoSpace 32GB ドライバをインストールする #\rWSL2 Kernelからdxgkrnlドライバをぶっこ抜いてインストールする。\ndkmsを扱うので事前にインストールすること。\n以下のコマンドでgithubからwsl2 kernelをクローンする。\ngit clone -b linux-msft-wsl-6.1.y --depth=1 https://github.com/microsoft/WSL2-Linux-Kernel\rcd WSL2-Linux-Kernel drivers/hv/dxgkrnl/dxgmodule.cのInterface from dxgglobalの部分の上に以下を追記する。\nstatic inline int uuid_le_cmp(const guid_t u1,const guid_t u2)\r{\rreturn memcmp(\u0026amp;u1, \u0026amp;u2,sizeof(guid_t));\r} 以下のコマンドでdkms.confを作成する。\nsudo su\rVERSION=$(git rev-parse --short HEAD)\rcp -r drivers/hv/dxgkrnl /usr/src/dxgkrnl-$VERSION\rmkdir -p /usr/src/dxgkrnl-$VERSION/inc/{uapi/misc,linux}\rcp include/uapi/misc/d3dkmthk.h /usr/src/dxgkrnl-$VERSION/inc/uapi/misc/d3dkmthk.h\rcp include/linux/hyperv.h /usr/src/dxgkrnl-$VERSION/inc/linux/hyperv_dxgkrnl.h\rsed -i \u0026#39;s/\\$(CONFIG_DXGKRNL)/m/\u0026#39; /usr/src/dxgkrnl-$VERSION/Makefile\rsed -i \u0026#39;s#linux/hyperv.h#linux/hyperv_dxgkrnl.h#\u0026#39; /usr/src/dxgkrnl-$VERSION/dxgmodule.c\recho \u0026#34;EXTRA_CFLAGS=-I\\$(PWD)/inc\u0026#34; \u0026gt;\u0026gt; /usr/src/dxgkrnl-$VERSION/Makefile\rcat \u0026gt; /usr/src/dxgkrnl-$VERSION/dkms.conf \u0026lt;\u0026lt;EOF\rPACKAGE_NAME=\u0026#34;dxgkrnl\u0026#34;\rPACKAGE_VERSION=\u0026#34;$VERSION\u0026#34;\rBUILT_MODULE_NAME=\u0026#34;dxgkrnl\u0026#34;\rDEST_MODULE_LOCATION=\u0026#34;/kernel/drivers/hv/dxgkrnl/\u0026#34;\rAUTOINSTALL=\u0026#34;yes\u0026#34;\rEOF dkmsを使ってインストール。\ndkms add dxgkrnl/$VERSION\rdkms build dxgkrnl/$VERSION\rdkms install dxgkrnl/$VERSION ホストからGPUドライバをコピーする #\r自分は面倒なのでwsl2から直接ぶっこ抜いたものをホストを経由してゲストに入れてます。\nsudo cp -r /usr/lib/wsl/ . 以下のコマンドでコピーしたりロードしたり\u0026hellip;\ncp -r wsl /usr/lib\recho \u0026#34;/usr/lib/wsl/lib\u0026#34; \u0026gt; /etc/ld.so.conf.d/ld.wsl.conf\rldconfig 再起動したらグラフィックがD3D12になってます。\nこのタイミングから、hypervの仮想マシン接続のウィンドウからGUIの操作ができなくなります。\n自分は事前にRustdeskを導入してそれで操作しています。\n事前にopenssh-serverを入れるとかして何かあったときに操作できるようにすると良いでしょう。\nあとがき #\rWSL2と同じように入れるもん入れたらoneAPIなりcudaなり使える。\n","date":"2024-01-10","externalUrl":null,"permalink":"/posts/2024-01-10-hyperv-gpupv/","section":"Posts","summary":"構成 # Host:Windows 11 VM:Ubuntu22.04LTS GPU:Intel ARC A770 16GB kernelは6.5.0-14-gene","title":"HyperVにGPUを割り当てて優勝したかった","type":"posts"},{"content":"","date":"2024-01-10","externalUrl":null,"permalink":"/categories/linux/","section":"Categories","summary":"","title":"Linux","type":"categories"},{"content":"","date":"2023-10-06","externalUrl":null,"permalink":"/tags/ai/","section":"Tags","summary":"","title":"AI","type":"tags"},{"content":"","date":"2023-10-06","externalUrl":null,"permalink":"/categories/intel-arc/","section":"Categories","summary":"","title":"Intel ARC","type":"categories"},{"content":"\r構成 #\rCPU:Core i5 12600K GPU:Intel ARC A770 16GB CPU内臓グラフィックは無効にしてあります。(使用するGPUを指定できなかったため)\n前置き #\rIntel公式のWin版IPEXではAOTコンパイルのサポートがされておらず、モデルのロード等にかなり時間がかかってしまうので快適に使用できないという問題があった。\n9/20に\rNuullll氏がAOTをサポートしたホイールを公開したことでWSL2を介さないStable Diffusionの利用が現実的なものとなった。\n(性能はネイティブなLinux環境の80%程度に落ち着くそう)\nInstall #\r(任意)SD.Next用の環境を作成 python -m venv venv DLLの依存関係をインストール pip install dpcpp-cpp-rt mkl-dpcpp SD.Nextをクローン git clone https://github.com/vladmandic/automatic.git -b dev\rcd automatic 実行 python launch.py --use-ipex Nuullll氏の手順では手動でipexをインストールするように書かれているが\n以下のコミットで自動でNuullll氏のホイールをインストールするように変更されています。\n色々模索したのでメモ #\r使用モデルはAnything3\nbackend\n基本的にはOriginalバックエンドのほうが生成が速いがLoraが正確に扱えていない気がする。\nCross-attention optimization method\nSub-quadratic推奨。\nDevice precision type\nBF16が最速。~~速さでは少し劣るがFP16のほうが生成物のクオリティが高い。 ~~ 2023/11/01時点ではBF16も安定している。\nsamplers\n自分的にはEuler aが生成速度とクオリティの両立が取れていると感じる。\nWSL2との比較\nVRAMのリークが発生しない。(\r以下のコミットで修正されていたようだが自分はHyperV環境なので適応範囲外だった)\nRAMの使用量が少なく感じられる。\n生成速度はWSL2が優っている。\n複数Loraを使用した際の適応がWSL2のほうが良い。\nあとがき #\rぼく個人の感想です。なんかそういうデータはありません。\n参考にしたもの #\rSteps to run SD.Next with Intel Arc GPU on native windows (IPEX) 追記 #\r2023/11/01\npythonをMinicondaから通常のものに変えたので一部コマンドをvenv用に変更。 ","date":"2023-10-06","externalUrl":null,"permalink":"/posts/2023-10-06-arc-sd-webui-windows/","section":"Posts","summary":"構成 # CPU:Core i5 12600K GPU:Intel ARC A770 16GB CPU内臓グラフィックは無効にしてありま","title":"Intel ARCなWindows環境でStable Diffusion WebUI","type":"posts"},{"content":"","date":"2023-10-06","externalUrl":null,"permalink":"/tags/stable-diffusion/","section":"Tags","summary":"","title":"Stable Diffusion","type":"tags"},{"content":"\r前置き #\rメイン環境をUbuntuにした際にdrm-xe-nextの話を耳にしたので使ってみたい！となって入れてみたメイン環境で遊ぶな\n大まかな流れ #\rdrm-xe-nextカーネルをビルド Mesaドライバをビルド 自ビルドドライバ向けに環境変数を定義 環境 #\rCPU:Intel Core i5 12600k\nGPU:Intel ARC A770 16GB\nOS:kubuntu 22.04LTS\ndrm-xe-nextカーネルをビルド #\rカーネルをビルドするにあたって必要な依存関係をセットアップしておきましょう。\nKernel/BuildYourOwnKernel - Ubuntu Wiki\rwiki.ubuntu.com\rセットアップが終わったらカーネルソースをローカルに落とします。\n$ git clone https://gitlab.freedesktop.org/drm/xe/kernel/ -b drm-xe-next カーネルソースのディレクトリを開いたらrootに切り替えてからmake menuconfigでコンフィグを生成。\nこのときに、現在使っているカーネルコンフィグを引き継ぎたい場合は事前にcp /boot/config-* .configでカーネルソースにコピーしておきましょう\nまた、他に必要なカーネルモジュール等がある場合は設定することを忘れずに。\nそしてmenuconfigのDevice Drivers\u0026gt;Graphics supportから\u0026lt;M\u0026gt;Intel Xe Graphicsと[*]Enable display supportをすること。\n可能であればIntel 8xx/9xx/G3x/G4x/HD Graphicsを無効にしておくこと。(カーネル適応後にXeより優先して読み込まれたりすることがあって面倒だから)\n他にはKEYS関連の項目が原因でビルドが止まることがあるので随時無効にしておくこと。\n↓面倒くさがり屋向けの一発ですべてが終わるコマンド\nmake -j$(nproc --all) \u0026amp;\u0026amp; make modules_install INSTALL_MOD_STRIP=1 -j$(nproc --all) \u0026amp;\u0026amp; make bindeb-pkg -j$(nproc --all) \u0026amp;\u0026amp; dpkg -i ../*.deb ビルドとインストールが終わったら次のステップに進む。\n再起動はお好みでというところだが、デフォで入っているMesaがllvmpipe等のソフトウェアレンダリングに対応していなかった場合が面倒なのでしないことを推奨。\nMesaドライバをビルド #\r2023/07/01現在、XeKMD対応のMesa Irisドライバはメインブランチにマージされたばかりなので自分でビルドする必要がある。\nMesaのビルドに必要な依存関係を揃えていく。\n32bitアプリも使いたい場合はi386向けの依存関係も後々揃えるがまずは基本的なツールとx86_64の依存関係から。\n$ sudo apt build-dep libdrm\r$ sudo apt build-dep mesa\r$ sudo apt install meson llvm-15\r$ pip3 install mako ついでに\rvulkan sdkもインストールしておくと今後が楽\nしたらばmesaのソースを落としてからビルドしていく。\n$ git clone https://gitlab.freedesktop.org/mesa/mesa -b main\r$ cd mesa $ mkdir build\r$ sudo meson setup build/ -Dintel-xe-kmd=enabled -Dvideo-codecs=\u0026#34;vc1dec, h264dec, h264enc,h265dec,h265enc\u0026#34; -Dintel-clc=enabled\r$ sudo meson install -C build/ これでx86_64のMesaドライバ一式がビルドできるはず。\nmeson setupの段階で必要なライブラリに抜けがあってエラーが出たらapt install ~~で随時インストールしていく。\nまた、-Dintel-clc=enabledはvulkanでIntel GPUのレイトレを使えるようにするよう指定する感じだが、必要に感じなければdisabledにしても問題ない。\n次にi386向けのドライバをビルドする。 必要なツールチェーンをインストールする\n$ sudo apt install gcc-11-i686-linux-gnu g++-11-i686-linux-gnu また、mesaソースに以下の内容を書き込んだファイルを作っておく。\nここではi386.txtとする。\n[binaries]\rc = \u0026#39;/usr/bin/i686-linux-gnu-gcc-11\u0026#39;\rcpp = \u0026#39;/usr/bin/i686-linux-gnu-g++-11\u0026#39;\rar = \u0026#39;/usr/bin/i686-linux-gnu-gcc-ar-11\u0026#39;\rstrip = \u0026#39;/usr/bin/i686-linux-gnu-strip\u0026#39;\rpkgconfig = \u0026#39;/usr/bin/i686-linux-gnu-pkg-config\u0026#39;\rllvm-config = \u0026#39;/usr/bin/llvm-config-15\u0026#39;\r[built-in options]\rc_args = [\u0026#39;-m32\u0026#39;]\rc_link_args = [\u0026#39;-m32\u0026#39;]\rcpp_args = [\u0026#39;-m32\u0026#39;]\rcpp_link_args = [\u0026#39;-m32\u0026#39;]\r[paths]\rprefix = \u0026#39;/usr\u0026#39;\rlibdir = \u0026#39;lib32\u0026#39;\rbindir = \u0026#39;bin\u0026#39;\r[host_machine]\rsystem = \u0026#39;linux\u0026#39;\rcpu_family = \u0026#39;x86\u0026#39;\rcpu = \u0026#39;i686\u0026#39;\rendian = \u0026#39;little\u0026#39; また、i386用のライブラリが必要になるのでsetup時に警告が出たら随時インストールすること。\n基本的にlib(ライブラリ名)-dev:i386のような形になる。 見つからなかったりしたら\rUbuntu パッケージ検索で探すと楽だと思う。\n$ mkdir build32\r$ sudo meson setup build32/ --cross-file i386.txt -Dintel-xe-kmd=enabled -Dgallium-drivers=iris -Dvulkan-drivers=intel\r$ sudo meson install -C build32 setup時に敢えてiris(intel)と指定しているのは単に依存関係が面倒だからである(特にllvmpipeお前)\nzinkとかなんとか欲しかったりする人はその都度指定されたし。\n環境変数を定義 #\r自分がKDE環境なのでKDEのやり方だけメモります。\nその他デスクトップ環境の人たちはデフォルトの環境変数の定義については各自でググってね。\nKDEの場合は~/.config/plasma-workspace/env/にシェルスクリプトを入れてそれを使って定義する感じになる。\nサンプル↓\nexport MESA_LOADER_DRIVER_OVERRIDE=iris\rexport LIBGL_DRIVERS_PATH=/usr/local/lib/x86_64-linux-gnu/dri:/usr/lib32/dri\rexport VK_ICD_FILENAMES=/usr/share/vulkan/icd.d/intel_icd.x86_64.json:/usr/share/vulkan/icd.d/intel_icd.i686.json export LD_LIBRARY_PATH=/usr/lib32/:/usr/local/lib/x86_64-linux-gnu/ 軽く説明すると\nMESA_LOADER_DRIVER_OVERRIDE\nmesaは基本的にカーネルモジュールの名前を参照してドライバを定義するがもちろんxe_dri.soなんてファイルは生成されていないので自分でirisと定義する必要がある。 LIBGL_DRIVERS_PATH\nOpenGLで使用するドライバのおいてあるパスを定義。 VK_ICD_FILENAMES\nvulkanのドライバを指定する変数。自ビルドのドライバを参照できるようにする。\n場合によっては各jsonの内容を修正しないといけない場合がある(自分がそうだった) LD_LIBRARY_PATH\nsteam等のアプリが自ビルドのドライバを参照できるようにする。自分は一応x86_64とi386の両方を定義している。 多分これで再起動したらカーネルモジュールがxeになっていてグラフィックプロセッサがちゃんとMesa Intelになっているはず。\nちなみにXeKMDだとIntel ARCではハードウェアエンコードが\r使えないらしい、うんち！ｗ\n","date":"2023-07-01","externalUrl":null,"permalink":"/posts/2023-07-01-xekmd-setup/","section":"Posts","summary":"前置き # メイン環境をUbuntuにした際にdrm-xe-ne","title":"drm-xe-nextで遊ぶ","type":"posts"},{"content":"","date":"2023-07-01","externalUrl":null,"permalink":"/tags/intel-gpu/","section":"Tags","summary":"","title":"Intel GPU","type":"tags"},{"content":"","date":"2023-07-01","externalUrl":null,"permalink":"/tags/mesa/","section":"Tags","summary":"","title":"Mesa","type":"tags"},{"content":"\r追記 #\rZenfone8の使用をやめたのとカスロム全般のモチベが低迷してしまったので\nv2.10-DAWNで一旦区切りをつけようと思います。\nProjectBlazeって？ #\rカスタムROMの一種で様々なカスタム機能を持ち合わせています。\nまたAndroid12で変更されたQSパネルのデザインが11以前のものになるようにカスタマイズされています。多分一番の目玉機能\nリンク #\rsourceforge.net\nGappsビルドは無いのでサイドロードでNikGappsを入れてください。\nHow 2 install? #\r※事前にAndroid12にしておいてください。\n必要なもののダウンロード #\rboot.img,Blaze-v1.x-sake-xxxxxxxx-xxxx-VANILLA-UNOFFICIAL.zip,\rvendor_boot.imgをダウンロード。\nリカバリのダウンロード #\rブートローダーに入って以下のコマンドを実行してリカバリとvendor_bootを書き込む。\nfastboot flash vendor_boot \u0026lt;vendor_boot\u0026gt;.img fastboot flash boot boot.img インストール #\rLineage RecoveryでBlaze-v1.x-sake-xxxxxxxx-xxxx-VANILLA-UNOFFICIAL.zipをサイドロードしてインストール。\nGappsやMagiskが必要な場合はこの段階で一緒にサイドロードしとくと楽です。\nMagisk.zipはapkの拡張子をzipに変更することで使用できます。(公式的にはこの使い方は\r非推奨)\n不具合とか #\rNFCが動作しない(ビルド時になんかエラーを吐かれたので一時的に無効化していますそのうち何とかします。) バッテリー残量を検出できない Changelog #\r20220918-1405 1.5-EOLの不具合修正版に更新 [詳細](https://t.me/projectblaze/45825)\r20220910-1119 ベースバンドがおかしかったのでカーネルをArrowOSのものからLineage19.1に変更 20220909-1317 初めてのビルド ちょっとした小話 #\rビルド時に詰まったところ\n\u0026ldquo;generated_kernel_includes \u0026ldquo;: cmd: unknown variable \u0026lsquo;$(PATH_OVERRIDE_SOONG)\nGSIビルドしてる時にもここで詰まった。\n結論としては、lunchではなくbreakfast sakeを叩いてあげるとエラーが出なかった。理由は知らん。\nclang-12: error: no such file or directory: \u0026lsquo;aarch64-linux-android-\u0026rsquo;\nこいつに4日くらい悩んでた気がする。\nBlazeのofficial deviceのツリーに習ってBoardconfig.mkに以下を記入することで解決した。\nTARGET_KERNEL_CLANG_COMPILE := true qcom hardware関連のエラー\nandroid_hardware_qcom_bootctrl,android_hardware_qcom_commonのブランチをarrow-12.1-cafに、 sm8350のandroid_hardware_qcom_audio,android_hardware_qcom_display,android_hardware_qcom_mediaのブランチをarrow-12.1-caf-sm8350に変更することで対処。 ","date":"2022-09-10","externalUrl":null,"permalink":"/posts/2022-09-10-projectblaze-sake/","section":"Posts","summary":"追記 # Zenfone8の使用をやめたのとカスロム全般のモチベ","title":"Zenfone8 Project Blaze","type":"posts"},{"content":"","date":"2022-09-10","externalUrl":null,"permalink":"/categories/%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0rom/","section":"Categories","summary":"","title":"カスタムROM","type":"categories"},{"content":"","date":"2022-07-06","externalUrl":null,"permalink":"/tags/blender/","section":"Tags","summary":"","title":"Blender","type":"tags"},{"content":"","date":"2022-07-06","externalUrl":null,"permalink":"/categories/blender/","section":"Categories","summary":"","title":"Blender","type":"categories"},{"content":"\r前置き #\r別のアバターをFallback対応したくなった時用に自分向けに書き殴ったメモ書きです。\nこの記事を読むにあたって #\rBlenderの操作がある程度わかる人向けです。 怪文書の解読に自身がある人以外は読まないほうがいいです。参考文献の方を読んだ方がいいです絶対。 環境 #\rOS Windows10 Blenderのバージョン 2.93.9 流れをざっくり #\rアドオンの準備 アバターをインポート テクスチャの割り当て マテリアルを結合 ポリゴンを減らす メッシュ結合 FBXとしてエクスポート アドオンの準備 #\rcats blender plugin material-combiner-addon\n(入れ方は)ググろうね！ アバターをインポート #\r上のメニューからインポート\u0026gt;FBX(.fbx)\nボーンの向きがおかしい場合は右の設定のアーマーチュアからボーンの自動整列をオンにしましょう。\n自分はこれで解決しました(シャオン、幽狐族のお姉様で確認)\nボーンの向きをしっかり確認しないと後々指先が曲がる等の問題が発生する可能性があるので必ず確認しましょう。\nテクスチャを割り当て #\rここはアバターによって違うので各自で頑張ってください。\n貼り終わったら一旦名前をつけて作業状況を保存しましょう。\n画像テクスチャで割り当てるとマテリアルの結合後に単色になることがあります。\nそうなる場合はMMD Textureの方から割り当ててあげましょう。\nマテリアルを結合 #\rここからは自分のキメラアバターを例に書きます。\nCATSプラグインのタブから\n最適化\u0026gt;アトラス\u0026gt;Generate Material Listでマテリアルリストを表示。\n全てのチェックボックスにチェックを入れたらSave Atlas to\u0026hellip;でマテリアルを結合。\n保存するディレクトリを聞かれるので指定したら自分の環境だと12000*12000強のバケモンが生成された〜〜\nAtras_\u0026lt;ランダムな6桁の数字\u0026gt;.pngでテクスチャが保存されます。\nポリゴンを減らす #\rポリゴンを減らす前に現在のポリゴン数と目標ポリゴン数を把握しましょう。\n今回はQuest Goodにしたいので10000以下にします。\n顔や髪はよく見られるのでそちらを優先に他の部分を削っていくつもりでやりましょう。\n特に素体は服で見えない部分も多いのでかなり大胆にいきます。\nまずは素体の隠れる部位を編集モードで削除します。\n素体を選択したままTABキーで編集モードに切り替えます。\n切り替わったら服で隠れる部分を選択してXキー\u0026gt;頂点で頂点を削除していきます。\n自分は胸~足首の範囲を削除しました。\nさて、シェイプキーを壊さないまま顔のポリゴンを減らしたいのですがCATSはメッシュ単位でのデシメートができないので\n顔とそれ以外でアーマーチュアを分けます。\nアーマーチュアを複製して顔とそれ以外のアーマーチュアを作りましょう。(アーマーチュアを階層ごと選択してShift+Dで複製)\nおけ\n複製が終わったらCATSのメニューから顔だけのアーマーチュアを選択して\nデシメーション\u0026gt;スマートを選択。\nトリスに先ほど設定したポリゴンの目標値を入力してQuick Decimation。\n顔がボコボコになります。\nある程度はシェーダーを適応したら誤魔化せるので自分の心とポリゴン数と相談しながら妥協してください。\n他の部位はBlender標準のデシメートを使って削ります。(こっちの方が楽だから)\nメッシュを選択したらモディファイアーからデシメートを選択して比率をいじっていい感じに調整しましょう(細かい手順は割愛)\nメッシュの結合 #\rCATSのメニューからカスタムモデルの作成\u0026gt;アーマーチュアをマージを以下の画像の設定で実行。\nFBXとしてエクスポート #\rCATSのメニューからできます。\n各自の環境に合わせて詳細設定を触ってみましょう。\n後書き #\rこれらの作業でこんな感じになりました。\n調整前 調整後 全体 47708 7283 失ったもの\n下着類 胸のサイズが調整できるようなアバターは素体も顔同様に分割してCATSで個別にデシメーションしましょう。\nマテリアルの設定やアップロード等は割愛します。面倒になったので\nボーンが多すぎる場合は必要のないボーンを適切に削除しましょう。\nおまけ #\rQuestアバターでは頬染め等の元々透過を使用していたものは使用できません。 そこで透過素材を合成したテクスチャとマテリアルを用意してアニメーションを活用することで擬似的に透過を使用した表情を使うようにします。\n詳しくは以下に参考文献を貼るのでそちらをご覧ください(丸投げ)\n参考文献 #\rPC向けアバター 5000ポリまでダイエット - Quest Excellent を目指す本 PC向けアバター(50,000ポリ超)をポリゴン削減してFallback対応したメモ なんならこの二つ読んだ方がわかりやすいし為になる。いやガチで\n","date":"2022-07-06","externalUrl":null,"permalink":"/posts/2022-07-06-avatar-quest-optimization/","section":"Posts","summary":"前置き # 別のアバターをFallback対応したくなった時用に","title":"PC用アバターをQuest GoodにしてFallback Avatarにする","type":"posts"},{"content":"","date":"2022-07-06","externalUrl":null,"permalink":"/tags/unity/","section":"Tags","summary":"","title":"Unity","type":"tags"},{"content":"","date":"2022-07-06","externalUrl":null,"permalink":"/categories/unity/","section":"Categories","summary":"","title":"Unity","type":"categories"},{"content":"","date":"2022-07-06","externalUrl":null,"permalink":"/tags/vrchat/","section":"Tags","summary":"","title":"VRChat","type":"tags"},{"content":"\r前置き #\rXDAで知り合ったセルビア在住の方(以下セルビア人)とTelegramでお話した時のものを自分用にまとめたものです。\nそもそもUSBが認識されなくなるって？ #\rPCがUSBデバイスを認識できなくなる現象が発生します。\n問題が発生したのでこのデバイスは停止しました。 (コード 43)\rUSB デバイスから無効な製品説明文字列記述子が返されました。 朝起きたら深夜に不在着信があった(二件) #\rTelegram\rちなみに自分が起きる前にxdaから関連の記事を拾ってきていた。有能\nHuawei P30 (ELE-L29 11.0.0.159 C431) TEST POINT AND DOWNGRADE PROBLEM 自分も過去に一度EMUI11に更新していたはずなのだがこのような現象には遭遇しなかったため認知していませんでした。\nちなみにGitHubでも報告されています。\nFix for USB/Fast Boot/Fast Charging この現象が発生する条件は？ #\r過去にEMUI11にアップグレードした端末をダウングレードした GSIをインストールした。 の二つを確認しています。\n過去にEMUI11にアップグレードした端末をダウングレードした #\r一度でもEMUI11にアップグレードしたらダウングレードした際に発生します。\n(おそらく11.0.0.159以降であると思われる)\n再度EMUI11にアップグレードすると発生しなくなります。\nGSIをインストールした。 #\rこれは過去の記事で僕が言ってたやつですね。\nGSIを使用している間、PC等がデバイスを認識できなくなります。\n過去にEMUI11にアップグレードしていない端末はEMUI9.1~10に戻した時点で発生しなくなります。\n更新履歴がある場合はおそらく11に戻すと発生しなくなります。\nんで解決方法とかなんかないの？ #\r自分は知り得ないです。\nHarmony TP Cableなるものを使用すれば解決できるという話も聞きましたが、\n使用できたという今のところは報告を見つけることができないので噂レベルに等しいです。\nAliExpressで販売されているのを見つけたので現在購入を検討していますが、\nPCやスマホを破壊してしまうかもしれないので迷っています。 誰か人柱お願い🥺\nHarmony TP Cable AliExpressで販売されていたもの\n2022 New Cable For Harmony Tp Cable For Huawei\n後書き #\rユーザーの選択肢を狭めるような改悪で残念だねって話をセルビア人としました。\nセルビア人は新しい端末を購入するつもりでOneplusを検討しているそうです。\nBootloaderのアンロックコードの発行停止は仕方が無いと思いますが、ダウングレードした端末に制限をかけるのは流石にやりすぎだと感じました。\n","date":"2022-03-17","externalUrl":null,"permalink":"/posts/2022-03-17-emui-usb/","section":"Posts","summary":"前置き # XDAで知り合ったセルビア在住の方(以下セルビア人)","title":"EMUI11からダウングレードした端末が認識されなくなる問題","type":"posts"},{"content":"\r前置き #\rシャオンちゃんを魔改造している際のテストで某ダンスワールドで踊ってもらってたのですか\nデフォルトの表情のままなのが勿体ないな～と感じたので頑張りました。\n注意\nUnityでシャオンちゃんを読み込める環境を作っていること VRChatにシャオンちゃんをアップロード出来る条件を満たしていること\nを前提に書いています。 環境\nUnity 2019.4.31f1 VRCSDK3 Shaon_v1.10 ダウンロードするもの #\rVRCDeveloperTool がとーしょこらさんが作ったツールです。感謝して使いましょう。\nダミーのメッシュを削除する #\rVRCDeveloperToolをインポートしたら上のメニューから\nVRCDeveloperTool \u0026gt; メッシュ \u0026gt; Shapekey Deleterを選択して開きます。\nShapeKeyDeleter\rShapekey Deleterを開いたらSkinnedMeshRendererにBodyを入れて\ndummyが1つになるようにチェックを入れて削除しましょう。\nShapeKeyDeleter\rMMD用に名前を変更したキーを作る #\rdummyを削除したらVRCDeveloperTool \u0026gt; メッシュ \u0026gt; ShapekeyName Changerを開いて\nRendererにBodyを指定します。\n以下のサイトを見ながらシャオンちゃんのBlendShapesをいじりつつ\nリネームしたいシェイプキーの右にあるテキストボックスにMMD用のシェイプキーを入力していきましょう。\nMMDモーフ一覧（TDAミク基準） MMD表情モーフ一覧 変更を適応する際にはDuplication Shapekeysにチェックを入れてからChange ShapekeyNameを押すことをお勧めします。\nDuplication Shapekeysにチェックを入れることで既存のシェイプキーを残したままMMD用にリネームしたシェイプキーを作ることができます。\nShapeKeyNameChanger\rFXレイヤーにある全てのアニメーションのWrite Defaultをオンにする。 #\rアバターのFXレイヤーに\u0026quot;vrc_AvatarV3HandsLayer2_Shaon_standard\u0026quot;を指定した後アニメーターで開いて、\n\u0026ldquo;ResetFace\u0026rdquo;,\u0026ldquo;Left Hand\u0026rdquo;,\u0026ldquo;Right Hand\u0026quot;の中にある全てのアニメーションのWrite Defaultにチェックを入れてください。\nAnimator\r入れ終わったらアップロードして確認してみよう！\nちゃんと設定できてたらこうなってるはず #\rシェイプキーを設定する前は張り付いた笑顔で踊っていたシャオンちゃんが..?\n表情豊かになった！ 参考にした記事 #\rVRChatのMMDダンスワールドで可愛く踊らせる方法 mmd월드 쉐이프키 작동조건 정리　","date":"2022-02-25","externalUrl":null,"permalink":"/posts/2022-02-25-shaon-shapekey/","section":"Posts","summary":"前置き # シャオンちゃんを魔改造している際のテストで某ダンスワ","title":"ダンスする時のシャオンちゃんを表情豊かにしてみた。","type":"posts"},{"content":"\r前置きと注意 #\rHuawei P30にlineageOS 18.1をインストールした話の続きです。\nP30にGSIなカスタムROMをflashしようとしたところ\nsystem領域が小さい！と怒られて大敗北しました。\n今回はsystem領域の拡張に成功したのでメモ帳代わりにまとめることにしました。\n⚠注意\nこの作業に取り掛かる前に必ずデータのバックアップを取ってください。\nまた、ここに書いてることを真似する場合は自己責任でお願いします。\nこの記事の内容を実践して生じた損害等の一切の責任を負いかねますので、ご了承ください。\nあなたの大切なスマホが文鎮になっても私は責任を取れません。\nまた、この方法で拡張した場合はeRecoveryを使って純正ROMに戻す場合はパーティションを元に戻さないとエラーを吐くので注意してください。\n前提条件 #\rBootloaderがunlockされているHuawei P30(自分はDC-Phoneix\u0026amp;HCUの時限ライセンスを購入して解除しました。 ) fastbootコマンドが使用できる環境 USB Type C to USB A 変換アダプタ USBマウス P30はEMUI9.1にしておいてください。(EMUI10以降はfastbootコマンドが使えない\u0026amp;強制的にBootloaderにロックがかけられるため。)\neRecoveryを使用すると強制的にEMUI10にされますが、HCUでアンロックした場合は、HisuiteでEMUI9.1に戻すとbootloaderがアンロックされた状態に戻るはずなので慌てないでください。\n(自分の場合はちゃんと戻りました)\n準備 #\rMate20 XのTWRP P30のRecovery_ramdisk parted_gdisk_fdisk_mkfs-ext4-aarch64-zip flashするROM(今回は\rDotOSを選択しました) P30(当たり前ですね) TWRPをflashする #\rMate20 XのTWRPイメージがあるディレクトリでターミナルを開いてください。\n開いたら\n$ fastboot flash recovery_ramdisk twrp-3.2.1-0-everest-unofficial-v3.img と入力してTWRPをflashしましょう。\n下準備 #\r再起動してTWRPを起動しましょう。(電源+Volume Up)\nタッチ操作は出来ないのでUSBマウスを接続して操作します。\n作業が長引くかもしれないのでスリープを無効にして画面の明るさを最低にしましょう。\nマウスの接続を解除してPCに接続してください。\n接続したら一度\n$ adb devices と入力してちゃんと接続されているかを確認しましょう。\n接続が確認出来たらpartedとgdiskをP30にコピーしましょう。\nparted_gdisk_fdisk_mkfs.ext4-AARCH64.zipを展開してターミナルで開きましょう\n$ adb push parted / $ adb push gdisk / コピーが終わったら端末のシェルを起動します。\n$ adb shell シェルを起動したらpartedとgdiskがコピーされているかを確認してください。\n~ # ls acc init patch_hw splash2 acct init.rc plat_file_contexts storage ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ file_contexts.bin parted sec_storage gdisk patch sepolicy partedとgdiskがあることを確認したら実行権限を付与しましょう。\n~ # chmod +x parted ~ # chmod +x gdisk 拡張 #\rここまで来たらあと一息！\nパーティションを操作しましょう。\npartedでsddを開きます。\n/parted /dev/block/sdd GNU Parted 3.2 Using /dev/block/sdd Welcome to GNU Parted! Type \u0026#39;help\u0026#39; to view a list of commands. まずはパーティションテーブルを確認しましょう。\n(parted) unit MiB (parted) p Error: The backup GPT table is corrupt, but the primary appears OK, so that will be used. OK/Cancel? ok Model: HISI SS6100GBCV100MBD (scsi) Disk /dev/block/sdd: 122000MiB Sector size (logical/physical): 4096B/4096B Partition Table: gpt Disk Flags: Number Start End Size File system Name Flags ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 62 2928MiB 3016MiB 88.0MiB cust_a msftdata 63 3016MiB 5328MiB 2312MiB ext4 system_a msftdata 64 5328MiB 7480MiB 2152MiB product_a msftdata 65 7480MiB 8056MiB 576MiB version_a msftdata 66 8056MiB 9200MiB 1144MiB preload_a msftdata 67 9200MiB 122000MiB 112800MiB ext4 userdata msftdata 確認ができたら適当なテキストファイルにコピペしておきましょう。\nメモを忘れた人用に自分のパーティションテーブルを貼っておきます。\rGoogle Drive\n今回はproduct_aとsystem_aを削除して新しくsystem_aを作成します。 この記事の場合は63,64ですね。\n注意\nここで間違ったパーティションを削除してしまうと再起不可になってしまう可能性があるので必ず手作業でやるようにしましょう。\nコピペはしないようにね。\n(parted) rm Partition number? 63 (parted) rm Partition number? 64 削除が終わったらgdiskに移動します。\n一度partedを閉じてから\n~ # /gdisk /dev/block/sdd GPT fdisk (gdisk) version 1.0.3 Partition table scan: MBR: protective BSD: not present APM: not present GPT: present Found valid GPT with protective MBR; using GPT. Command (? for help): ここからパーティションを追加します。\nこの記事の場合は63ですね。\nCommand (? for help): n Partition number (63-128, default 63): 63 First sector (34-1914879, default = 772096) or {+-}size{KMGTP}: Last sector (772096-1914879, default = 1914879) or {+-}size{KMGTP}: +4464MiB Current type is \u0026#39;Linux filesystem\u0026#39; Hex code or GUID (L to show codes, Enter = 8300): 0700 Changed type of partition to \u0026#39;Microsoft basic data\u0026#39; Command (? for help): 作成したパーティションの名前を変更します。\nCommand (? for help): c Partition number (1-67): 63 Enter name: system_a 作業が終わったら書き込みをする前に一度変更後のパーティションテーブルを確認しましょう。\nCommand (? for help): p Disk /dev/block/sdd: 31232000 sectors, 119.1 GiB Sector size (logical/physical): 4096/4096 bytes Disk identifier (GUID): F9F21FFF-A8D4-5F0E-9746-594869AEC34E Partition table holds up to 128 entries Main partition table begins at sector 2 and ends at sector 5 First usable sector is 34, last usable sector is 31231999 Partitions will be aligned on 128-sector boundaries Total free space is 94 sectors (376.0 KiB) Number Start (sector) End (sector) Size Code Name ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 62 749568 772095 88.0 MiB 0700 cust_a 63 772096 1914879 4.4 GiB 0700 system_a 65 1914880 2062335 576.0 MiB 0700 version_a 66 2062336 2355199 1.1 GiB 0700 preload_a 67 2355200 31231999 110.2 GiB 0700 userdata 確認して大丈夫だったらパーティション情報の書き込みをしましょう。\nCommand (? for help): w Final checks complete. About to write GPT data. THIS WILL OVERWRITE EXISTING PARTITIONS!! Do you want to proceed? (Y/N): Y OK; writing new GUID partition table (GPT) to /dev/block/sdd. Warning: The kernel is still using the old partition table. The new table will be used at the next reboot or after you run partprobe(8) or kpartx(8) The operation has completed successfully. 書き込みが終わったらgdiskを閉じてpartedを開いてください。\n~ # /parted /dev/block/sdd GNU Parted 3.2 Using /dev/block/sdd Welcome to GNU Parted! Type \u0026#39;help\u0026#39; to view a list of commands. (parted) Flagの設定\n(parted) set 63 Flag to Invert? msftdata New state? on/[off]? on ext4にフォーマット\n~ # make_ext4fs /dev/block/sdd63 Creating filesystem with parameters: Size: 3472883712 Block size: 4096 Blocks per group: 32768 Inodes per group: 8160 Inode size: 256 Journal blocks: 13248 Label: Blocks: 847872 Block groups: 26 Reserved block group size: 207 Created filesystem with 11/212160 inodes and 28026/847872 blocks 変更がちゃんとできているかの確認\n~ # /parted /dev/block/sdd GNU Parted 3.2 Using /dev/block/sdd Welcome to GNU Parted! Type \u0026#39;help\u0026#39; to view a list of commands. (parted) p Model: HISI SS6100GBCV100MBD (scsi) Disk /dev/block/sdd: 128GB Sector size (logical/physical): 4096B/4096B Partition Table: gpt Disk Flags: Number Start End Size File system Name Flags ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 62 3070MB 3163MB 92.3MB cust_a msftdata 63 3163MB 7843MB 4681MB ext4 system_a msftdata 65 7843MB 8447MB 604MB version_a msftdata 66 8447MB 9647MB 1200MB preload_a msftdata 67 9647MB 128GB 118GB userdata msftdata これで拡張作業はおしまい。\nROMをflashしよう #\rこれでようやく好きなROMが焼けるはず\u0026hellip;。\nfastboot --disable-verity --disable-verification flash system dotOS-R-v5.2-arm64-ab-GAPPS-OFFICIAL.img Sending sparse \u0026#39;system\u0026#39; 1/8 (458752 KB) OKAY [ 3.193s] Writing \u0026#39;system\u0026#39; OKAY [ 1.051s] Sending sparse \u0026#39;system\u0026#39; 2/8 (458752 KB) OKAY [ 9.784s] Writing \u0026#39;system\u0026#39; OKAY [ 1.050s] Sending sparse \u0026#39;system\u0026#39; 3/8 (458752 KB) OKAY [ 9.894s] Writing \u0026#39;system\u0026#39; OKAY [ 1.051s] Sending sparse \u0026#39;system\u0026#39; 4/8 (458752 KB) OKAY [ 9.541s] Writing \u0026#39;system\u0026#39; OKAY [ 1.789s] Sending sparse \u0026#39;system\u0026#39; 5/8 (458752 KB) OKAY [ 9.920s] Writing \u0026#39;system\u0026#39; OKAY [ 4.190s] Sending sparse \u0026#39;system\u0026#39; 6/8 (458752 KB) OKAY [ 9.487s] Writing \u0026#39;system\u0026#39; OKAY [ 4.602s] Sending sparse \u0026#39;system\u0026#39; 7/8 (458752 KB) OKAY [ 9.500s] Writing \u0026#39;system\u0026#39; OKAY [ 1.034s] Sending sparse \u0026#39;system\u0026#39; 8/8 (233220 KB) OKAY [ 4.879s] Writing \u0026#39;system\u0026#39; OKAY [ 0.807s] Finished. Total time: 81.857s わーい。 この後初期化するので一度stock recoveryに戻してください。\nfastboot flash recovery_ramdisk recovery_ramdiS.img Sending \u0026#39;recovery_ramdisk\u0026#39; (32768 KB) OKAY [ 0.232s] Writing \u0026#39;recovery_ramdisk\u0026#39; OKAY [ 0.077s] Finished. Total time: 0.341s リカバリーを起動してファクトリーリセットをしたらいよいよ起動！\nいよいよ起動 #\rまぁ普通に起動するはずです。\n後はmagiskを入れるなりなんなりで自由にやっちゃってください！\nUSB接続してもWindowsが認識できない不具合(?)はこちらでも残ってました\n参考にした記事 #\rAndroid端末にカスタムROMを焼くにシステム領域が足りないためパーティションを拡張する Android: how to increase system partition and decrease data partition? ","date":"2021-10-17","externalUrl":null,"permalink":"/posts/2021-10-17-expanding-the-system-partition-of-p30/","section":"Posts","summary":"前置きと注意 # Huawei P30にlineageOS 18.1をインスト","title":"Huawei P30 (ELE-L29) のsystem領域を拡張した話 その1","type":"posts"},{"content":"\r前置き #\r再起動する度に画面の明るさ自動調整が勝手にONになるのが地味に面倒だなと感じたので、別にEMUIを使う理由もないということでカスタムROMを焼こうとなりました。\n⚠注意\nこの作業に取り掛かる前に必ずデータのバックアップを取ってください。\nここに書いていることを真似する場合は自己責任でお願いします。\nこの記事の内容を実践して生じた損害等の一切の責任を負いかねますので、ご了承ください。\nあなたの大切なスマホが文鎮になっても私は責任を取れません。\n前提条件 #\rBootloaderがunlockされているHuawei P30(自分はDC-Unlockerのライセンスを購入して解除しました。 ) fastbootコマンドが使用できる環境。 P30はEMUI9.1にしておいてください。(EMUI10以降はfastbootコマンドが使えなくされているためです。ふざけんな)\nromの選択とダウンロード #\r今回使用するromを選びましょう。\n私は\rLineageOS 18.1にしました。\n本当はOctaviOSを使用したかったのですが自分の環境ではflash出来なかったので断念しました。\nP30のsystemパーティションよりOctaviOSのイメージの方が大きかったのでsystem領域を拡張しようと思ったのですが\ndelete-logical-partitionを実行しようとしても\n$ fastboot delete-logical-partition product Deleting \u0026#39;product\u0026#39; FAILED (remote: \u0026#39;Command not allowed\u0026#39;) fastboot: error: Command failed とエラーを吐いてしまい素人な自分ではどうにもならなかったからです。たすけて\n自分だけなのか他の人もこうなってるのかはわからないですが、\nそもそもの話P30をBLUしている人が少数なので全く情報が無かったです。\nsystem領域の拡張が上手く行ったので近いうちに\rまとめました。\n追記\nそもそもfastbootdに対応していなかったってオチでした。\nちゃんと文章は読もうねというお話\nsystem領域は2.25GBくらいでした。\nflashするROMの候補としては\nCAOS11 LineageOS 18.1 AOSP 11.0 v313(system-roar-arm64-ab-vndklite-vanilla.img or system-roar-arm64-ab-vanilla.img) ここ辺りでしょうか。\nromをflashする #\rダウンロードしたファイルが圧縮されていた場合は展開しておいてください。\nイメージファイルのディレクトリでターミナルを開いて\n$ fastboot --disable-verity --disable-verification flash system (file_name).img と実行してください。\nflashが完了したらファクトリーリセットをしましょう。\nケーブルを抜いてからVolume+と電源を長押しして起動、\nHuaweiロゴが表示されたらボタンを離してください。\nリカバリーが起動します。\n実際に使ってみる #\r数十分使ってみましたが動作はすごく良かったです。\nEMUIよりも軽量で使いやすかったです。\nしかしながら1つ2つだけ大きな欠点がありました。\nLineageOSが画面内指紋認証に対応していないようで\n頑張って指紋を登録してもロック画面で使うことができないみたいです\u0026hellip;。\n背面か物理ボタンにセンサーが搭載されているタイプしか使えないみたいです。\n顔認証も使用出来ないようなので流石に厳しいってことで画面内指紋認証を採用している機種ではカスタムromは厳しいのかもしれないです。\nもう1つは端末や環境との相性問題かもしれませんが\nwindowsとP30を接続しても認識されない問題が発生しました。\n流石に面倒になったのでこれは厳しいってことで一回休むことにしました😩。\nMate 20 XのTWRPがP30でも動作したので(唐突)\n時間があればこれを使ってsystem領域の拡張に挑戦しようかなと思っています。\nLineageを入れた際にスクリーンショットをいくつか撮影しておいたので供養しておきます。\n参考にした記事 #\rGeneric System Image | Android オープンソース プロジェクト LOSQ/LiR - LineageOS 17.1/18.1-UNOFFICIAL-GSI ","date":"2021-10-11","externalUrl":null,"permalink":"/posts/2021-10-11-installing-lineageos-on-huawei-p30/","section":"Posts","summary":"前置き # 再起動する度に画面の明るさ自動調整が勝手にONになる","title":"Huawei P30にlineageOS 18.1をインストールした話","type":"posts"},{"content":"HugoとGithub Pagesを使用して公開しています。\n自分が試行錯誤したことをいつでも閲覧できるようにするためのブログです。\nNothing Thereという名前でメモ書き用ブログを作る。 2021/10/07\rm10cというテーマを使っていた。\r(当時はLobotomyCorporationにドハマリしていた)\rテーマをStackに変える。 2021/12/28\rこれ見つけたときビビッときた\nMarkdownの修正は最低限で良かったので比較的楽ではあった\rテーマをBlowfishに変える。 2024/03/22\r気分転換に変えてみることにした。\nMarkdownの修正箇所が多く、ディレクトリの配置を変えたりもしたため疲れた。\nついでに不要な記事を消した\rGithub Pagesのrepositoryを変更 2024/03/23\rhugo --cleanDestinationDirしたらsubmoduleが壊れたので整理がてらrepositoryを作り直した。\r","date":"2021-10-07","externalUrl":null,"permalink":"/page/about/","section":"Pages","summary":"HugoとGithub Pagesを使用して公開しています。 自","title":"About","type":"page"},{"content":"","date":"2021-10-07","externalUrl":null,"permalink":"/page/","section":"Pages","summary":"","title":"Pages","type":"page"},{"content":"","date":"2021-10-07","externalUrl":null,"permalink":"/tags/%E3%81%9D%E3%81%AE%E4%BB%96/","section":"Tags","summary":"","title":"その他","type":"tags"},{"content":"","date":"2021-10-07","externalUrl":null,"permalink":"/categories/%E3%81%9D%E3%81%AE%E4%BB%96/","section":"Categories","summary":"","title":"その他","type":"categories"},{"content":"","date":"0001-01-01","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"}]